// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DocumentRequestForm tests should render the document request form correctly 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <DocumentRequestForm>
        <Container
          id="document-request"
        >
          <div
            className="ui container"
            id="document-request"
          >
            <Header
              as="h1"
            >
              <h1
                className="ui header"
              >
                Request new book
              </h1>
            </Header>
            <p>
              Fill in the form below to request a new book from the library.
            </p>
            <p>
              You can see all your book requests on your
               
              <Link
                to="/profile"
              >
                <LinkAnchor
                  href="/profile"
                  navigate={[Function]}
                >
                  <a
                    href="/profile"
                    onClick={[Function]}
                  >
                    profile
                  </a>
                </LinkAnchor>
              </Link>
               page.
            </p>
            <Segment>
              <div
                className="ui segment"
              >
                <Connect(BaseForm)
                  createApiMethod={[Function]}
                  initialValues={
                    Object {
                      "title": "",
                    }
                  }
                  submitSerializer={[Function]}
                  successCallback={[Function]}
                  successSubmitMessage="Your book request has been sent to the library."
                  validationSchema={
                    ObjectSchema {
                      "_blacklist": RefSet {
                        "list": Set {},
                        "refs": Map {},
                      },
                      "_conditions": Array [],
                      "_defaultDefault": [Function],
                      "_deps": Array [],
                      "_excludedEdges": Array [],
                      "_exclusive": Object {},
                      "_mutate": undefined,
                      "_nodes": Array [
                        "publication_year",
                        "title",
                      ],
                      "_options": Object {
                        "abortEarly": true,
                        "recursive": true,
                      },
                      "_type": "object",
                      "_typeError": [Function],
                      "_whitelist": RefSet {
                        "list": Set {},
                        "refs": Map {},
                      },
                      "fields": Object {
                        "publication_year": NumberSchema {
                          "_blacklist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "_conditions": Array [],
                          "_deps": Array [],
                          "_exclusive": Object {
                            "integer": false,
                          },
                          "_mutate": undefined,
                          "_options": Object {
                            "abortEarly": true,
                            "recursive": true,
                          },
                          "_type": "number",
                          "_typeError": [Function],
                          "_whitelist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "tests": Array [
                            [Function],
                          ],
                          "transforms": Array [
                            [Function],
                          ],
                        },
                        "title": StringSchema {
                          "_blacklist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "_conditions": Array [],
                          "_deps": Array [],
                          "_exclusive": Object {
                            "required": true,
                          },
                          "_mutate": undefined,
                          "_options": Object {
                            "abortEarly": true,
                            "recursive": true,
                          },
                          "_type": "string",
                          "_typeError": [Function],
                          "_whitelist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "tests": Array [
                            [Function],
                          ],
                          "transforms": Array [
                            [Function],
                          ],
                        },
                      },
                      "tests": Array [],
                      "transforms": Array [
                        [Function],
                      ],
                    }
                  }
                >
                  <BaseForm
                    createApiMethod={[Function]}
                    initialValues={
                      Object {
                        "title": "",
                      }
                    }
                    sendSuccessNotification={[Function]}
                    submitSerializer={[Function]}
                    successCallback={[Function]}
                    successSubmitMessage="Your book request has been sent to the library."
                    validationSchema={
                      ObjectSchema {
                        "_blacklist": RefSet {
                          "list": Set {},
                          "refs": Map {},
                        },
                        "_conditions": Array [],
                        "_defaultDefault": [Function],
                        "_deps": Array [],
                        "_excludedEdges": Array [],
                        "_exclusive": Object {},
                        "_mutate": undefined,
                        "_nodes": Array [
                          "publication_year",
                          "title",
                        ],
                        "_options": Object {
                          "abortEarly": true,
                          "recursive": true,
                        },
                        "_type": "object",
                        "_typeError": [Function],
                        "_whitelist": RefSet {
                          "list": Set {},
                          "refs": Map {},
                        },
                        "fields": Object {
                          "publication_year": NumberSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "integer": false,
                            },
                            "_mutate": undefined,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "number",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "title": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": true,
                            },
                            "_mutate": undefined,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                        },
                        "tests": Array [],
                        "transforms": Array [
                          [Function],
                        ],
                      }
                    }
                  >
                    <Container>
                      <div
                        className="ui container"
                      >
                        <Formik
                          enableReinitialize={false}
                          initialValues={
                            Object {
                              "title": "",
                            }
                          }
                          isInitialValid={false}
                          onSubmit={[Function]}
                          render={[Function]}
                          validateOnBlur={true}
                          validateOnChange={true}
                          validationSchema={
                            ObjectSchema {
                              "_blacklist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "_conditions": Array [],
                              "_defaultDefault": [Function],
                              "_deps": Array [],
                              "_excludedEdges": Array [],
                              "_exclusive": Object {},
                              "_mutate": undefined,
                              "_nodes": Array [
                                "publication_year",
                                "title",
                              ],
                              "_options": Object {
                                "abortEarly": true,
                                "recursive": true,
                              },
                              "_type": "object",
                              "_typeError": [Function],
                              "_whitelist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "fields": Object {
                                "publication_year": NumberSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "integer": false,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "number",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                },
                                "title": StringSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "required": true,
                                  },
                                  "_mutate": undefined,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "string",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                },
                              },
                              "tests": Array [],
                              "transforms": Array [
                                [Function],
                              ],
                            }
                          }
                        >
                          <Form
                            as="form"
                            loading={false}
                            onSubmit={[Function]}
                          >
                            <form
                              className="ui form"
                              onSubmit={[Function]}
                            >
                              <StringField
                                fieldPath="title"
                                inline={false}
                                label="Title"
                                placeholder="Title"
                                required={true}
                              >
                                <FormikConnect(FieldInner)
                                  component={[Function]}
                                  name="title"
                                >
                                  <FieldInner
                                    component={[Function]}
                                    formik={
                                      Object {
                                        "dirty": false,
                                        "errors": Object {},
                                        "handleBlur": [Function],
                                        "handleChange": [Function],
                                        "handleReset": [Function],
                                        "handleSubmit": [Function],
                                        "initialValues": Object {
                                          "title": "",
                                        },
                                        "isSubmitting": false,
                                        "isValid": false,
                                        "isValidating": false,
                                        "registerField": [Function],
                                        "resetForm": [Function],
                                        "setError": [Function],
                                        "setErrors": [Function],
                                        "setFieldError": [Function],
                                        "setFieldTouched": [Function],
                                        "setFieldValue": [Function],
                                        "setFormikState": [Function],
                                        "setStatus": [Function],
                                        "setSubmitting": [Function],
                                        "setTouched": [Function],
                                        "setValues": [Function],
                                        "status": undefined,
                                        "submitCount": 0,
                                        "submitForm": [Function],
                                        "touched": Object {},
                                        "unregisterField": [Function],
                                        "validate": undefined,
                                        "validateField": [Function],
                                        "validateForm": [Function],
                                        "validateOnBlur": true,
                                        "validateOnChange": true,
                                        "validationSchema": ObjectSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_defaultDefault": [Function],
                                          "_deps": Array [],
                                          "_excludedEdges": Array [],
                                          "_exclusive": Object {},
                                          "_mutate": undefined,
                                          "_nodes": Array [
                                            "publication_year",
                                            "title",
                                          ],
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "object",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "fields": Object {
                                            "publication_year": NumberSchema {
                                              "_blacklist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "_conditions": Array [],
                                              "_deps": Array [],
                                              "_exclusive": Object {
                                                "integer": false,
                                              },
                                              "_mutate": undefined,
                                              "_options": Object {
                                                "abortEarly": true,
                                                "recursive": true,
                                              },
                                              "_type": "number",
                                              "_typeError": [Function],
                                              "_whitelist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "tests": Array [
                                                [Function],
                                              ],
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                            "title": StringSchema {
                                              "_blacklist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "_conditions": Array [],
                                              "_deps": Array [],
                                              "_exclusive": Object {
                                                "required": true,
                                              },
                                              "_mutate": undefined,
                                              "_options": Object {
                                                "abortEarly": true,
                                                "recursive": true,
                                              },
                                              "_type": "string",
                                              "_typeError": [Function],
                                              "_whitelist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "tests": Array [
                                                [Function],
                                              ],
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                          },
                                          "tests": Array [],
                                          "transforms": Array [
                                            [Function],
                                          ],
                                        },
                                        "values": Object {
                                          "title": "",
                                        },
                                      }
                                    }
                                    name="title"
                                  >
                                    <Component
                                      field={
                                        Object {
                                          "name": "title",
                                          "onBlur": [Function],
                                          "onChange": [Function],
                                          "value": "",
                                        }
                                      }
                                      form={
                                        Object {
                                          "dirty": false,
                                          "errors": Object {},
                                          "handleBlur": [Function],
                                          "handleChange": [Function],
                                          "handleReset": [Function],
                                          "handleSubmit": [Function],
                                          "initialValues": Object {
                                            "title": "",
                                          },
                                          "isSubmitting": false,
                                          "isValid": false,
                                          "isValidating": false,
                                          "registerField": [Function],
                                          "resetForm": [Function],
                                          "setError": [Function],
                                          "setErrors": [Function],
                                          "setFieldError": [Function],
                                          "setFieldTouched": [Function],
                                          "setFieldValue": [Function],
                                          "setFormikState": [Function],
                                          "setStatus": [Function],
                                          "setSubmitting": [Function],
                                          "setTouched": [Function],
                                          "setValues": [Function],
                                          "status": undefined,
                                          "submitCount": 0,
                                          "submitForm": [Function],
                                          "touched": Object {},
                                          "unregisterField": [Function],
                                          "validateField": [Function],
                                          "validateForm": [Function],
                                          "validateOnBlur": true,
                                          "validateOnChange": true,
                                          "values": Object {
                                            "title": "",
                                          },
                                        }
                                      }
                                    >
                                      <FormField
                                        inline={false}
                                      >
                                        <div
                                          className="field"
                                        >
                                          <FormInput
                                            as={[Function]}
                                            control={[Function]}
                                            error={null}
                                            fluid={true}
                                            id="title"
                                            label="Title"
                                            name="title"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            placeholder="Title"
                                            required={true}
                                            value=""
                                          >
                                            <FormField
                                              control={[Function]}
                                              error={null}
                                              fluid={true}
                                              id="title"
                                              label="Title"
                                              name="title"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              placeholder="Title"
                                              required={true}
                                              value=""
                                            >
                                              <div
                                                className="required field"
                                              >
                                                <label
                                                  htmlFor="title"
                                                >
                                                  Title
                                                </label>
                                                <Input
                                                  fluid={true}
                                                  id="title"
                                                  name="title"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  placeholder="Title"
                                                  required={true}
                                                  type="text"
                                                  value=""
                                                >
                                                  <div
                                                    className="ui fluid input"
                                                  >
                                                    <input
                                                      id="title"
                                                      name="title"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      placeholder="Title"
                                                      required={true}
                                                      type="text"
                                                      value=""
                                                    />
                                                  </div>
                                                </Input>
                                              </div>
                                            </FormField>
                                          </FormInput>
                                        </div>
                                      </FormField>
                                    </Component>
                                  </FieldInner>
                                </FormikConnect(FieldInner)>
                              </StringField>
                              <StringField
                                fieldPath="journal_title"
                                inline={false}
                                label="Journal title"
                                placeholder="Journal title"
                              >
                                <FormikConnect(FieldInner)
                                  component={[Function]}
                                  name="journal_title"
                                >
                                  <FieldInner
                                    component={[Function]}
                                    formik={
                                      Object {
                                        "dirty": false,
                                        "errors": Object {},
                                        "handleBlur": [Function],
                                        "handleChange": [Function],
                                        "handleReset": [Function],
                                        "handleSubmit": [Function],
                                        "initialValues": Object {
                                          "title": "",
                                        },
                                        "isSubmitting": false,
                                        "isValid": false,
                                        "isValidating": false,
                                        "registerField": [Function],
                                        "resetForm": [Function],
                                        "setError": [Function],
                                        "setErrors": [Function],
                                        "setFieldError": [Function],
                                        "setFieldTouched": [Function],
                                        "setFieldValue": [Function],
                                        "setFormikState": [Function],
                                        "setStatus": [Function],
                                        "setSubmitting": [Function],
                                        "setTouched": [Function],
                                        "setValues": [Function],
                                        "status": undefined,
                                        "submitCount": 0,
                                        "submitForm": [Function],
                                        "touched": Object {},
                                        "unregisterField": [Function],
                                        "validate": undefined,
                                        "validateField": [Function],
                                        "validateForm": [Function],
                                        "validateOnBlur": true,
                                        "validateOnChange": true,
                                        "validationSchema": ObjectSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_defaultDefault": [Function],
                                          "_deps": Array [],
                                          "_excludedEdges": Array [],
                                          "_exclusive": Object {},
                                          "_mutate": undefined,
                                          "_nodes": Array [
                                            "publication_year",
                                            "title",
                                          ],
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "object",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "fields": Object {
                                            "publication_year": NumberSchema {
                                              "_blacklist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "_conditions": Array [],
                                              "_deps": Array [],
                                              "_exclusive": Object {
                                                "integer": false,
                                              },
                                              "_mutate": undefined,
                                              "_options": Object {
                                                "abortEarly": true,
                                                "recursive": true,
                                              },
                                              "_type": "number",
                                              "_typeError": [Function],
                                              "_whitelist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "tests": Array [
                                                [Function],
                                              ],
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                            "title": StringSchema {
                                              "_blacklist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "_conditions": Array [],
                                              "_deps": Array [],
                                              "_exclusive": Object {
                                                "required": true,
                                              },
                                              "_mutate": undefined,
                                              "_options": Object {
                                                "abortEarly": true,
                                                "recursive": true,
                                              },
                                              "_type": "string",
                                              "_typeError": [Function],
                                              "_whitelist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "tests": Array [
                                                [Function],
                                              ],
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                          },
                                          "tests": Array [],
                                          "transforms": Array [
                                            [Function],
                                          ],
                                        },
                                        "values": Object {
                                          "title": "",
                                        },
                                      }
                                    }
                                    name="journal_title"
                                  >
                                    <Component
                                      field={
                                        Object {
                                          "name": "journal_title",
                                          "onBlur": [Function],
                                          "onChange": [Function],
                                          "value": undefined,
                                        }
                                      }
                                      form={
                                        Object {
                                          "dirty": false,
                                          "errors": Object {},
                                          "handleBlur": [Function],
                                          "handleChange": [Function],
                                          "handleReset": [Function],
                                          "handleSubmit": [Function],
                                          "initialValues": Object {
                                            "title": "",
                                          },
                                          "isSubmitting": false,
                                          "isValid": false,
                                          "isValidating": false,
                                          "registerField": [Function],
                                          "resetForm": [Function],
                                          "setError": [Function],
                                          "setErrors": [Function],
                                          "setFieldError": [Function],
                                          "setFieldTouched": [Function],
                                          "setFieldValue": [Function],
                                          "setFormikState": [Function],
                                          "setStatus": [Function],
                                          "setSubmitting": [Function],
                                          "setTouched": [Function],
                                          "setValues": [Function],
                                          "status": undefined,
                                          "submitCount": 0,
                                          "submitForm": [Function],
                                          "touched": Object {},
                                          "unregisterField": [Function],
                                          "validateField": [Function],
                                          "validateForm": [Function],
                                          "validateOnBlur": true,
                                          "validateOnChange": true,
                                          "values": Object {
                                            "title": "",
                                          },
                                        }
                                      }
                                    >
                                      <FormField
                                        inline={false}
                                      >
                                        <div
                                          className="field"
                                        >
                                          <FormInput
                                            as={[Function]}
                                            control={[Function]}
                                            error={null}
                                            fluid={true}
                                            id="journal_title"
                                            label="Journal title"
                                            name="journal_title"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            placeholder="Journal title"
                                            value=""
                                          >
                                            <FormField
                                              control={[Function]}
                                              error={null}
                                              fluid={true}
                                              id="journal_title"
                                              label="Journal title"
                                              name="journal_title"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              placeholder="Journal title"
                                              value=""
                                            >
                                              <div
                                                className="field"
                                              >
                                                <label
                                                  htmlFor="journal_title"
                                                >
                                                  Journal title
                                                </label>
                                                <Input
                                                  fluid={true}
                                                  id="journal_title"
                                                  name="journal_title"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  placeholder="Journal title"
                                                  type="text"
                                                  value=""
                                                >
                                                  <div
                                                    className="ui fluid input"
                                                  >
                                                    <input
                                                      id="journal_title"
                                                      name="journal_title"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      placeholder="Journal title"
                                                      type="text"
                                                      value=""
                                                    />
                                                  </div>
                                                </Input>
                                              </div>
                                            </FormField>
                                          </FormInput>
                                        </div>
                                      </FormField>
                                    </Component>
                                  </FieldInner>
                                </FormikConnect(FieldInner)>
                              </StringField>
                              <StringField
                                fieldPath="authors"
                                inline={false}
                                label="Authors"
                                placeholder="Authors"
                              >
                                <FormikConnect(FieldInner)
                                  component={[Function]}
                                  name="authors"
                                >
                                  <FieldInner
                                    component={[Function]}
                                    formik={
                                      Object {
                                        "dirty": false,
                                        "errors": Object {},
                                        "handleBlur": [Function],
                                        "handleChange": [Function],
                                        "handleReset": [Function],
                                        "handleSubmit": [Function],
                                        "initialValues": Object {
                                          "title": "",
                                        },
                                        "isSubmitting": false,
                                        "isValid": false,
                                        "isValidating": false,
                                        "registerField": [Function],
                                        "resetForm": [Function],
                                        "setError": [Function],
                                        "setErrors": [Function],
                                        "setFieldError": [Function],
                                        "setFieldTouched": [Function],
                                        "setFieldValue": [Function],
                                        "setFormikState": [Function],
                                        "setStatus": [Function],
                                        "setSubmitting": [Function],
                                        "setTouched": [Function],
                                        "setValues": [Function],
                                        "status": undefined,
                                        "submitCount": 0,
                                        "submitForm": [Function],
                                        "touched": Object {},
                                        "unregisterField": [Function],
                                        "validate": undefined,
                                        "validateField": [Function],
                                        "validateForm": [Function],
                                        "validateOnBlur": true,
                                        "validateOnChange": true,
                                        "validationSchema": ObjectSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_defaultDefault": [Function],
                                          "_deps": Array [],
                                          "_excludedEdges": Array [],
                                          "_exclusive": Object {},
                                          "_mutate": undefined,
                                          "_nodes": Array [
                                            "publication_year",
                                            "title",
                                          ],
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "object",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "fields": Object {
                                            "publication_year": NumberSchema {
                                              "_blacklist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "_conditions": Array [],
                                              "_deps": Array [],
                                              "_exclusive": Object {
                                                "integer": false,
                                              },
                                              "_mutate": undefined,
                                              "_options": Object {
                                                "abortEarly": true,
                                                "recursive": true,
                                              },
                                              "_type": "number",
                                              "_typeError": [Function],
                                              "_whitelist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "tests": Array [
                                                [Function],
                                              ],
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                            "title": StringSchema {
                                              "_blacklist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "_conditions": Array [],
                                              "_deps": Array [],
                                              "_exclusive": Object {
                                                "required": true,
                                              },
                                              "_mutate": undefined,
                                              "_options": Object {
                                                "abortEarly": true,
                                                "recursive": true,
                                              },
                                              "_type": "string",
                                              "_typeError": [Function],
                                              "_whitelist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "tests": Array [
                                                [Function],
                                              ],
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                          },
                                          "tests": Array [],
                                          "transforms": Array [
                                            [Function],
                                          ],
                                        },
                                        "values": Object {
                                          "title": "",
                                        },
                                      }
                                    }
                                    name="authors"
                                  >
                                    <Component
                                      field={
                                        Object {
                                          "name": "authors",
                                          "onBlur": [Function],
                                          "onChange": [Function],
                                          "value": undefined,
                                        }
                                      }
                                      form={
                                        Object {
                                          "dirty": false,
                                          "errors": Object {},
                                          "handleBlur": [Function],
                                          "handleChange": [Function],
                                          "handleReset": [Function],
                                          "handleSubmit": [Function],
                                          "initialValues": Object {
                                            "title": "",
                                          },
                                          "isSubmitting": false,
                                          "isValid": false,
                                          "isValidating": false,
                                          "registerField": [Function],
                                          "resetForm": [Function],
                                          "setError": [Function],
                                          "setErrors": [Function],
                                          "setFieldError": [Function],
                                          "setFieldTouched": [Function],
                                          "setFieldValue": [Function],
                                          "setFormikState": [Function],
                                          "setStatus": [Function],
                                          "setSubmitting": [Function],
                                          "setTouched": [Function],
                                          "setValues": [Function],
                                          "status": undefined,
                                          "submitCount": 0,
                                          "submitForm": [Function],
                                          "touched": Object {},
                                          "unregisterField": [Function],
                                          "validateField": [Function],
                                          "validateForm": [Function],
                                          "validateOnBlur": true,
                                          "validateOnChange": true,
                                          "values": Object {
                                            "title": "",
                                          },
                                        }
                                      }
                                    >
                                      <FormField
                                        inline={false}
                                      >
                                        <div
                                          className="field"
                                        >
                                          <FormInput
                                            as={[Function]}
                                            control={[Function]}
                                            error={null}
                                            fluid={true}
                                            id="authors"
                                            label="Authors"
                                            name="authors"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            placeholder="Authors"
                                            value=""
                                          >
                                            <FormField
                                              control={[Function]}
                                              error={null}
                                              fluid={true}
                                              id="authors"
                                              label="Authors"
                                              name="authors"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              placeholder="Authors"
                                              value=""
                                            >
                                              <div
                                                className="field"
                                              >
                                                <label
                                                  htmlFor="authors"
                                                >
                                                  Authors
                                                </label>
                                                <Input
                                                  fluid={true}
                                                  id="authors"
                                                  name="authors"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  placeholder="Authors"
                                                  type="text"
                                                  value=""
                                                >
                                                  <div
                                                    className="ui fluid input"
                                                  >
                                                    <input
                                                      id="authors"
                                                      name="authors"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      placeholder="Authors"
                                                      type="text"
                                                      value=""
                                                    />
                                                  </div>
                                                </Input>
                                              </div>
                                            </FormField>
                                          </FormInput>
                                        </div>
                                      </FormField>
                                    </Component>
                                  </FieldInner>
                                </FormikConnect(FieldInner)>
                              </StringField>
                              <FormGroup
                                widths="equal"
                              >
                                <div
                                  className="equal width fields"
                                >
                                  <StringField
                                    fieldPath="isbn"
                                    inline={false}
                                    label="ISBN"
                                    placeholder="ISBN"
                                  >
                                    <FormikConnect(FieldInner)
                                      component={[Function]}
                                      name="isbn"
                                    >
                                      <FieldInner
                                        component={[Function]}
                                        formik={
                                          Object {
                                            "dirty": false,
                                            "errors": Object {},
                                            "handleBlur": [Function],
                                            "handleChange": [Function],
                                            "handleReset": [Function],
                                            "handleSubmit": [Function],
                                            "initialValues": Object {
                                              "title": "",
                                            },
                                            "isSubmitting": false,
                                            "isValid": false,
                                            "isValidating": false,
                                            "registerField": [Function],
                                            "resetForm": [Function],
                                            "setError": [Function],
                                            "setErrors": [Function],
                                            "setFieldError": [Function],
                                            "setFieldTouched": [Function],
                                            "setFieldValue": [Function],
                                            "setFormikState": [Function],
                                            "setStatus": [Function],
                                            "setSubmitting": [Function],
                                            "setTouched": [Function],
                                            "setValues": [Function],
                                            "status": undefined,
                                            "submitCount": 0,
                                            "submitForm": [Function],
                                            "touched": Object {},
                                            "unregisterField": [Function],
                                            "validate": undefined,
                                            "validateField": [Function],
                                            "validateForm": [Function],
                                            "validateOnBlur": true,
                                            "validateOnChange": true,
                                            "validationSchema": ObjectSchema {
                                              "_blacklist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "_conditions": Array [],
                                              "_defaultDefault": [Function],
                                              "_deps": Array [],
                                              "_excludedEdges": Array [],
                                              "_exclusive": Object {},
                                              "_mutate": undefined,
                                              "_nodes": Array [
                                                "publication_year",
                                                "title",
                                              ],
                                              "_options": Object {
                                                "abortEarly": true,
                                                "recursive": true,
                                              },
                                              "_type": "object",
                                              "_typeError": [Function],
                                              "_whitelist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "fields": Object {
                                                "publication_year": NumberSchema {
                                                  "_blacklist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "_conditions": Array [],
                                                  "_deps": Array [],
                                                  "_exclusive": Object {
                                                    "integer": false,
                                                  },
                                                  "_mutate": undefined,
                                                  "_options": Object {
                                                    "abortEarly": true,
                                                    "recursive": true,
                                                  },
                                                  "_type": "number",
                                                  "_typeError": [Function],
                                                  "_whitelist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "tests": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                  ],
                                                },
                                                "title": StringSchema {
                                                  "_blacklist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "_conditions": Array [],
                                                  "_deps": Array [],
                                                  "_exclusive": Object {
                                                    "required": true,
                                                  },
                                                  "_mutate": undefined,
                                                  "_options": Object {
                                                    "abortEarly": true,
                                                    "recursive": true,
                                                  },
                                                  "_type": "string",
                                                  "_typeError": [Function],
                                                  "_whitelist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "tests": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                  ],
                                                },
                                              },
                                              "tests": Array [],
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                            "values": Object {
                                              "title": "",
                                            },
                                          }
                                        }
                                        name="isbn"
                                      >
                                        <Component
                                          field={
                                            Object {
                                              "name": "isbn",
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "value": undefined,
                                            }
                                          }
                                          form={
                                            Object {
                                              "dirty": false,
                                              "errors": Object {},
                                              "handleBlur": [Function],
                                              "handleChange": [Function],
                                              "handleReset": [Function],
                                              "handleSubmit": [Function],
                                              "initialValues": Object {
                                                "title": "",
                                              },
                                              "isSubmitting": false,
                                              "isValid": false,
                                              "isValidating": false,
                                              "registerField": [Function],
                                              "resetForm": [Function],
                                              "setError": [Function],
                                              "setErrors": [Function],
                                              "setFieldError": [Function],
                                              "setFieldTouched": [Function],
                                              "setFieldValue": [Function],
                                              "setFormikState": [Function],
                                              "setStatus": [Function],
                                              "setSubmitting": [Function],
                                              "setTouched": [Function],
                                              "setValues": [Function],
                                              "status": undefined,
                                              "submitCount": 0,
                                              "submitForm": [Function],
                                              "touched": Object {},
                                              "unregisterField": [Function],
                                              "validateField": [Function],
                                              "validateForm": [Function],
                                              "validateOnBlur": true,
                                              "validateOnChange": true,
                                              "values": Object {
                                                "title": "",
                                              },
                                            }
                                          }
                                        >
                                          <FormField
                                            inline={false}
                                          >
                                            <div
                                              className="field"
                                            >
                                              <FormInput
                                                as={[Function]}
                                                control={[Function]}
                                                error={null}
                                                fluid={true}
                                                id="isbn"
                                                label="ISBN"
                                                name="isbn"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                placeholder="ISBN"
                                                value=""
                                              >
                                                <FormField
                                                  control={[Function]}
                                                  error={null}
                                                  fluid={true}
                                                  id="isbn"
                                                  label="ISBN"
                                                  name="isbn"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  placeholder="ISBN"
                                                  value=""
                                                >
                                                  <div
                                                    className="field"
                                                  >
                                                    <label
                                                      htmlFor="isbn"
                                                    >
                                                      ISBN
                                                    </label>
                                                    <Input
                                                      fluid={true}
                                                      id="isbn"
                                                      name="isbn"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      placeholder="ISBN"
                                                      type="text"
                                                      value=""
                                                    >
                                                      <div
                                                        className="ui fluid input"
                                                      >
                                                        <input
                                                          id="isbn"
                                                          name="isbn"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          placeholder="ISBN"
                                                          type="text"
                                                          value=""
                                                        />
                                                      </div>
                                                    </Input>
                                                  </div>
                                                </FormField>
                                              </FormInput>
                                            </div>
                                          </FormField>
                                        </Component>
                                      </FieldInner>
                                    </FormikConnect(FieldInner)>
                                  </StringField>
                                  <StringField
                                    fieldPath="issn"
                                    inline={false}
                                    label="ISSN"
                                    placeholder="ISSN"
                                  >
                                    <FormikConnect(FieldInner)
                                      component={[Function]}
                                      name="issn"
                                    >
                                      <FieldInner
                                        component={[Function]}
                                        formik={
                                          Object {
                                            "dirty": false,
                                            "errors": Object {},
                                            "handleBlur": [Function],
                                            "handleChange": [Function],
                                            "handleReset": [Function],
                                            "handleSubmit": [Function],
                                            "initialValues": Object {
                                              "title": "",
                                            },
                                            "isSubmitting": false,
                                            "isValid": false,
                                            "isValidating": false,
                                            "registerField": [Function],
                                            "resetForm": [Function],
                                            "setError": [Function],
                                            "setErrors": [Function],
                                            "setFieldError": [Function],
                                            "setFieldTouched": [Function],
                                            "setFieldValue": [Function],
                                            "setFormikState": [Function],
                                            "setStatus": [Function],
                                            "setSubmitting": [Function],
                                            "setTouched": [Function],
                                            "setValues": [Function],
                                            "status": undefined,
                                            "submitCount": 0,
                                            "submitForm": [Function],
                                            "touched": Object {},
                                            "unregisterField": [Function],
                                            "validate": undefined,
                                            "validateField": [Function],
                                            "validateForm": [Function],
                                            "validateOnBlur": true,
                                            "validateOnChange": true,
                                            "validationSchema": ObjectSchema {
                                              "_blacklist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "_conditions": Array [],
                                              "_defaultDefault": [Function],
                                              "_deps": Array [],
                                              "_excludedEdges": Array [],
                                              "_exclusive": Object {},
                                              "_mutate": undefined,
                                              "_nodes": Array [
                                                "publication_year",
                                                "title",
                                              ],
                                              "_options": Object {
                                                "abortEarly": true,
                                                "recursive": true,
                                              },
                                              "_type": "object",
                                              "_typeError": [Function],
                                              "_whitelist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "fields": Object {
                                                "publication_year": NumberSchema {
                                                  "_blacklist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "_conditions": Array [],
                                                  "_deps": Array [],
                                                  "_exclusive": Object {
                                                    "integer": false,
                                                  },
                                                  "_mutate": undefined,
                                                  "_options": Object {
                                                    "abortEarly": true,
                                                    "recursive": true,
                                                  },
                                                  "_type": "number",
                                                  "_typeError": [Function],
                                                  "_whitelist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "tests": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                  ],
                                                },
                                                "title": StringSchema {
                                                  "_blacklist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "_conditions": Array [],
                                                  "_deps": Array [],
                                                  "_exclusive": Object {
                                                    "required": true,
                                                  },
                                                  "_mutate": undefined,
                                                  "_options": Object {
                                                    "abortEarly": true,
                                                    "recursive": true,
                                                  },
                                                  "_type": "string",
                                                  "_typeError": [Function],
                                                  "_whitelist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "tests": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                  ],
                                                },
                                              },
                                              "tests": Array [],
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                            "values": Object {
                                              "title": "",
                                            },
                                          }
                                        }
                                        name="issn"
                                      >
                                        <Component
                                          field={
                                            Object {
                                              "name": "issn",
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "value": undefined,
                                            }
                                          }
                                          form={
                                            Object {
                                              "dirty": false,
                                              "errors": Object {},
                                              "handleBlur": [Function],
                                              "handleChange": [Function],
                                              "handleReset": [Function],
                                              "handleSubmit": [Function],
                                              "initialValues": Object {
                                                "title": "",
                                              },
                                              "isSubmitting": false,
                                              "isValid": false,
                                              "isValidating": false,
                                              "registerField": [Function],
                                              "resetForm": [Function],
                                              "setError": [Function],
                                              "setErrors": [Function],
                                              "setFieldError": [Function],
                                              "setFieldTouched": [Function],
                                              "setFieldValue": [Function],
                                              "setFormikState": [Function],
                                              "setStatus": [Function],
                                              "setSubmitting": [Function],
                                              "setTouched": [Function],
                                              "setValues": [Function],
                                              "status": undefined,
                                              "submitCount": 0,
                                              "submitForm": [Function],
                                              "touched": Object {},
                                              "unregisterField": [Function],
                                              "validateField": [Function],
                                              "validateForm": [Function],
                                              "validateOnBlur": true,
                                              "validateOnChange": true,
                                              "values": Object {
                                                "title": "",
                                              },
                                            }
                                          }
                                        >
                                          <FormField
                                            inline={false}
                                          >
                                            <div
                                              className="field"
                                            >
                                              <FormInput
                                                as={[Function]}
                                                control={[Function]}
                                                error={null}
                                                fluid={true}
                                                id="issn"
                                                label="ISSN"
                                                name="issn"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                placeholder="ISSN"
                                                value=""
                                              >
                                                <FormField
                                                  control={[Function]}
                                                  error={null}
                                                  fluid={true}
                                                  id="issn"
                                                  label="ISSN"
                                                  name="issn"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  placeholder="ISSN"
                                                  value=""
                                                >
                                                  <div
                                                    className="field"
                                                  >
                                                    <label
                                                      htmlFor="issn"
                                                    >
                                                      ISSN
                                                    </label>
                                                    <Input
                                                      fluid={true}
                                                      id="issn"
                                                      name="issn"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      placeholder="ISSN"
                                                      type="text"
                                                      value=""
                                                    >
                                                      <div
                                                        className="ui fluid input"
                                                      >
                                                        <input
                                                          id="issn"
                                                          name="issn"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          placeholder="ISSN"
                                                          type="text"
                                                          value=""
                                                        />
                                                      </div>
                                                    </Input>
                                                  </div>
                                                </FormField>
                                              </FormInput>
                                            </div>
                                          </FormField>
                                        </Component>
                                      </FieldInner>
                                    </FormikConnect(FieldInner)>
                                  </StringField>
                                </div>
                              </FormGroup>
                              <FormGroup
                                widths="equal"
                              >
                                <div
                                  className="equal width fields"
                                >
                                  <StringField
                                    fieldPath="edition"
                                    inline={false}
                                    label="Edition"
                                    placeholder="Edition number"
                                  >
                                    <FormikConnect(FieldInner)
                                      component={[Function]}
                                      name="edition"
                                    >
                                      <FieldInner
                                        component={[Function]}
                                        formik={
                                          Object {
                                            "dirty": false,
                                            "errors": Object {},
                                            "handleBlur": [Function],
                                            "handleChange": [Function],
                                            "handleReset": [Function],
                                            "handleSubmit": [Function],
                                            "initialValues": Object {
                                              "title": "",
                                            },
                                            "isSubmitting": false,
                                            "isValid": false,
                                            "isValidating": false,
                                            "registerField": [Function],
                                            "resetForm": [Function],
                                            "setError": [Function],
                                            "setErrors": [Function],
                                            "setFieldError": [Function],
                                            "setFieldTouched": [Function],
                                            "setFieldValue": [Function],
                                            "setFormikState": [Function],
                                            "setStatus": [Function],
                                            "setSubmitting": [Function],
                                            "setTouched": [Function],
                                            "setValues": [Function],
                                            "status": undefined,
                                            "submitCount": 0,
                                            "submitForm": [Function],
                                            "touched": Object {},
                                            "unregisterField": [Function],
                                            "validate": undefined,
                                            "validateField": [Function],
                                            "validateForm": [Function],
                                            "validateOnBlur": true,
                                            "validateOnChange": true,
                                            "validationSchema": ObjectSchema {
                                              "_blacklist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "_conditions": Array [],
                                              "_defaultDefault": [Function],
                                              "_deps": Array [],
                                              "_excludedEdges": Array [],
                                              "_exclusive": Object {},
                                              "_mutate": undefined,
                                              "_nodes": Array [
                                                "publication_year",
                                                "title",
                                              ],
                                              "_options": Object {
                                                "abortEarly": true,
                                                "recursive": true,
                                              },
                                              "_type": "object",
                                              "_typeError": [Function],
                                              "_whitelist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "fields": Object {
                                                "publication_year": NumberSchema {
                                                  "_blacklist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "_conditions": Array [],
                                                  "_deps": Array [],
                                                  "_exclusive": Object {
                                                    "integer": false,
                                                  },
                                                  "_mutate": undefined,
                                                  "_options": Object {
                                                    "abortEarly": true,
                                                    "recursive": true,
                                                  },
                                                  "_type": "number",
                                                  "_typeError": [Function],
                                                  "_whitelist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "tests": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                  ],
                                                },
                                                "title": StringSchema {
                                                  "_blacklist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "_conditions": Array [],
                                                  "_deps": Array [],
                                                  "_exclusive": Object {
                                                    "required": true,
                                                  },
                                                  "_mutate": undefined,
                                                  "_options": Object {
                                                    "abortEarly": true,
                                                    "recursive": true,
                                                  },
                                                  "_type": "string",
                                                  "_typeError": [Function],
                                                  "_whitelist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "tests": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                  ],
                                                },
                                              },
                                              "tests": Array [],
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                            "values": Object {
                                              "title": "",
                                            },
                                          }
                                        }
                                        name="edition"
                                      >
                                        <Component
                                          field={
                                            Object {
                                              "name": "edition",
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "value": undefined,
                                            }
                                          }
                                          form={
                                            Object {
                                              "dirty": false,
                                              "errors": Object {},
                                              "handleBlur": [Function],
                                              "handleChange": [Function],
                                              "handleReset": [Function],
                                              "handleSubmit": [Function],
                                              "initialValues": Object {
                                                "title": "",
                                              },
                                              "isSubmitting": false,
                                              "isValid": false,
                                              "isValidating": false,
                                              "registerField": [Function],
                                              "resetForm": [Function],
                                              "setError": [Function],
                                              "setErrors": [Function],
                                              "setFieldError": [Function],
                                              "setFieldTouched": [Function],
                                              "setFieldValue": [Function],
                                              "setFormikState": [Function],
                                              "setStatus": [Function],
                                              "setSubmitting": [Function],
                                              "setTouched": [Function],
                                              "setValues": [Function],
                                              "status": undefined,
                                              "submitCount": 0,
                                              "submitForm": [Function],
                                              "touched": Object {},
                                              "unregisterField": [Function],
                                              "validateField": [Function],
                                              "validateForm": [Function],
                                              "validateOnBlur": true,
                                              "validateOnChange": true,
                                              "values": Object {
                                                "title": "",
                                              },
                                            }
                                          }
                                        >
                                          <FormField
                                            inline={false}
                                          >
                                            <div
                                              className="field"
                                            >
                                              <FormInput
                                                as={[Function]}
                                                control={[Function]}
                                                error={null}
                                                fluid={true}
                                                id="edition"
                                                label="Edition"
                                                name="edition"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                placeholder="Edition number"
                                                value=""
                                              >
                                                <FormField
                                                  control={[Function]}
                                                  error={null}
                                                  fluid={true}
                                                  id="edition"
                                                  label="Edition"
                                                  name="edition"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  placeholder="Edition number"
                                                  value=""
                                                >
                                                  <div
                                                    className="field"
                                                  >
                                                    <label
                                                      htmlFor="edition"
                                                    >
                                                      Edition
                                                    </label>
                                                    <Input
                                                      fluid={true}
                                                      id="edition"
                                                      name="edition"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      placeholder="Edition number"
                                                      type="text"
                                                      value=""
                                                    >
                                                      <div
                                                        className="ui fluid input"
                                                      >
                                                        <input
                                                          id="edition"
                                                          name="edition"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          placeholder="Edition number"
                                                          type="text"
                                                          value=""
                                                        />
                                                      </div>
                                                    </Input>
                                                  </div>
                                                </FormField>
                                              </FormInput>
                                            </div>
                                          </FormField>
                                        </Component>
                                      </FieldInner>
                                    </FormikConnect(FieldInner)>
                                  </StringField>
                                  <StringField
                                    fieldPath="volume"
                                    inline={false}
                                    label="Volume"
                                    placeholder="Volume number"
                                  >
                                    <FormikConnect(FieldInner)
                                      component={[Function]}
                                      name="volume"
                                    >
                                      <FieldInner
                                        component={[Function]}
                                        formik={
                                          Object {
                                            "dirty": false,
                                            "errors": Object {},
                                            "handleBlur": [Function],
                                            "handleChange": [Function],
                                            "handleReset": [Function],
                                            "handleSubmit": [Function],
                                            "initialValues": Object {
                                              "title": "",
                                            },
                                            "isSubmitting": false,
                                            "isValid": false,
                                            "isValidating": false,
                                            "registerField": [Function],
                                            "resetForm": [Function],
                                            "setError": [Function],
                                            "setErrors": [Function],
                                            "setFieldError": [Function],
                                            "setFieldTouched": [Function],
                                            "setFieldValue": [Function],
                                            "setFormikState": [Function],
                                            "setStatus": [Function],
                                            "setSubmitting": [Function],
                                            "setTouched": [Function],
                                            "setValues": [Function],
                                            "status": undefined,
                                            "submitCount": 0,
                                            "submitForm": [Function],
                                            "touched": Object {},
                                            "unregisterField": [Function],
                                            "validate": undefined,
                                            "validateField": [Function],
                                            "validateForm": [Function],
                                            "validateOnBlur": true,
                                            "validateOnChange": true,
                                            "validationSchema": ObjectSchema {
                                              "_blacklist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "_conditions": Array [],
                                              "_defaultDefault": [Function],
                                              "_deps": Array [],
                                              "_excludedEdges": Array [],
                                              "_exclusive": Object {},
                                              "_mutate": undefined,
                                              "_nodes": Array [
                                                "publication_year",
                                                "title",
                                              ],
                                              "_options": Object {
                                                "abortEarly": true,
                                                "recursive": true,
                                              },
                                              "_type": "object",
                                              "_typeError": [Function],
                                              "_whitelist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "fields": Object {
                                                "publication_year": NumberSchema {
                                                  "_blacklist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "_conditions": Array [],
                                                  "_deps": Array [],
                                                  "_exclusive": Object {
                                                    "integer": false,
                                                  },
                                                  "_mutate": undefined,
                                                  "_options": Object {
                                                    "abortEarly": true,
                                                    "recursive": true,
                                                  },
                                                  "_type": "number",
                                                  "_typeError": [Function],
                                                  "_whitelist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "tests": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                  ],
                                                },
                                                "title": StringSchema {
                                                  "_blacklist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "_conditions": Array [],
                                                  "_deps": Array [],
                                                  "_exclusive": Object {
                                                    "required": true,
                                                  },
                                                  "_mutate": undefined,
                                                  "_options": Object {
                                                    "abortEarly": true,
                                                    "recursive": true,
                                                  },
                                                  "_type": "string",
                                                  "_typeError": [Function],
                                                  "_whitelist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "tests": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                  ],
                                                },
                                              },
                                              "tests": Array [],
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                            "values": Object {
                                              "title": "",
                                            },
                                          }
                                        }
                                        name="volume"
                                      >
                                        <Component
                                          field={
                                            Object {
                                              "name": "volume",
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "value": undefined,
                                            }
                                          }
                                          form={
                                            Object {
                                              "dirty": false,
                                              "errors": Object {},
                                              "handleBlur": [Function],
                                              "handleChange": [Function],
                                              "handleReset": [Function],
                                              "handleSubmit": [Function],
                                              "initialValues": Object {
                                                "title": "",
                                              },
                                              "isSubmitting": false,
                                              "isValid": false,
                                              "isValidating": false,
                                              "registerField": [Function],
                                              "resetForm": [Function],
                                              "setError": [Function],
                                              "setErrors": [Function],
                                              "setFieldError": [Function],
                                              "setFieldTouched": [Function],
                                              "setFieldValue": [Function],
                                              "setFormikState": [Function],
                                              "setStatus": [Function],
                                              "setSubmitting": [Function],
                                              "setTouched": [Function],
                                              "setValues": [Function],
                                              "status": undefined,
                                              "submitCount": 0,
                                              "submitForm": [Function],
                                              "touched": Object {},
                                              "unregisterField": [Function],
                                              "validateField": [Function],
                                              "validateForm": [Function],
                                              "validateOnBlur": true,
                                              "validateOnChange": true,
                                              "values": Object {
                                                "title": "",
                                              },
                                            }
                                          }
                                        >
                                          <FormField
                                            inline={false}
                                          >
                                            <div
                                              className="field"
                                            >
                                              <FormInput
                                                as={[Function]}
                                                control={[Function]}
                                                error={null}
                                                fluid={true}
                                                id="volume"
                                                label="Volume"
                                                name="volume"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                placeholder="Volume number"
                                                value=""
                                              >
                                                <FormField
                                                  control={[Function]}
                                                  error={null}
                                                  fluid={true}
                                                  id="volume"
                                                  label="Volume"
                                                  name="volume"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  placeholder="Volume number"
                                                  value=""
                                                >
                                                  <div
                                                    className="field"
                                                  >
                                                    <label
                                                      htmlFor="volume"
                                                    >
                                                      Volume
                                                    </label>
                                                    <Input
                                                      fluid={true}
                                                      id="volume"
                                                      name="volume"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      placeholder="Volume number"
                                                      type="text"
                                                      value=""
                                                    >
                                                      <div
                                                        className="ui fluid input"
                                                      >
                                                        <input
                                                          id="volume"
                                                          name="volume"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          placeholder="Volume number"
                                                          type="text"
                                                          value=""
                                                        />
                                                      </div>
                                                    </Input>
                                                  </div>
                                                </FormField>
                                              </FormInput>
                                            </div>
                                          </FormField>
                                        </Component>
                                      </FieldInner>
                                    </FormikConnect(FieldInner)>
                                  </StringField>
                                  <StringField
                                    fieldPath="issue"
                                    inline={false}
                                    label="Issue"
                                    placeholder="Issue number"
                                  >
                                    <FormikConnect(FieldInner)
                                      component={[Function]}
                                      name="issue"
                                    >
                                      <FieldInner
                                        component={[Function]}
                                        formik={
                                          Object {
                                            "dirty": false,
                                            "errors": Object {},
                                            "handleBlur": [Function],
                                            "handleChange": [Function],
                                            "handleReset": [Function],
                                            "handleSubmit": [Function],
                                            "initialValues": Object {
                                              "title": "",
                                            },
                                            "isSubmitting": false,
                                            "isValid": false,
                                            "isValidating": false,
                                            "registerField": [Function],
                                            "resetForm": [Function],
                                            "setError": [Function],
                                            "setErrors": [Function],
                                            "setFieldError": [Function],
                                            "setFieldTouched": [Function],
                                            "setFieldValue": [Function],
                                            "setFormikState": [Function],
                                            "setStatus": [Function],
                                            "setSubmitting": [Function],
                                            "setTouched": [Function],
                                            "setValues": [Function],
                                            "status": undefined,
                                            "submitCount": 0,
                                            "submitForm": [Function],
                                            "touched": Object {},
                                            "unregisterField": [Function],
                                            "validate": undefined,
                                            "validateField": [Function],
                                            "validateForm": [Function],
                                            "validateOnBlur": true,
                                            "validateOnChange": true,
                                            "validationSchema": ObjectSchema {
                                              "_blacklist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "_conditions": Array [],
                                              "_defaultDefault": [Function],
                                              "_deps": Array [],
                                              "_excludedEdges": Array [],
                                              "_exclusive": Object {},
                                              "_mutate": undefined,
                                              "_nodes": Array [
                                                "publication_year",
                                                "title",
                                              ],
                                              "_options": Object {
                                                "abortEarly": true,
                                                "recursive": true,
                                              },
                                              "_type": "object",
                                              "_typeError": [Function],
                                              "_whitelist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "fields": Object {
                                                "publication_year": NumberSchema {
                                                  "_blacklist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "_conditions": Array [],
                                                  "_deps": Array [],
                                                  "_exclusive": Object {
                                                    "integer": false,
                                                  },
                                                  "_mutate": undefined,
                                                  "_options": Object {
                                                    "abortEarly": true,
                                                    "recursive": true,
                                                  },
                                                  "_type": "number",
                                                  "_typeError": [Function],
                                                  "_whitelist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "tests": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                  ],
                                                },
                                                "title": StringSchema {
                                                  "_blacklist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "_conditions": Array [],
                                                  "_deps": Array [],
                                                  "_exclusive": Object {
                                                    "required": true,
                                                  },
                                                  "_mutate": undefined,
                                                  "_options": Object {
                                                    "abortEarly": true,
                                                    "recursive": true,
                                                  },
                                                  "_type": "string",
                                                  "_typeError": [Function],
                                                  "_whitelist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "tests": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                  ],
                                                },
                                              },
                                              "tests": Array [],
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                            "values": Object {
                                              "title": "",
                                            },
                                          }
                                        }
                                        name="issue"
                                      >
                                        <Component
                                          field={
                                            Object {
                                              "name": "issue",
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "value": undefined,
                                            }
                                          }
                                          form={
                                            Object {
                                              "dirty": false,
                                              "errors": Object {},
                                              "handleBlur": [Function],
                                              "handleChange": [Function],
                                              "handleReset": [Function],
                                              "handleSubmit": [Function],
                                              "initialValues": Object {
                                                "title": "",
                                              },
                                              "isSubmitting": false,
                                              "isValid": false,
                                              "isValidating": false,
                                              "registerField": [Function],
                                              "resetForm": [Function],
                                              "setError": [Function],
                                              "setErrors": [Function],
                                              "setFieldError": [Function],
                                              "setFieldTouched": [Function],
                                              "setFieldValue": [Function],
                                              "setFormikState": [Function],
                                              "setStatus": [Function],
                                              "setSubmitting": [Function],
                                              "setTouched": [Function],
                                              "setValues": [Function],
                                              "status": undefined,
                                              "submitCount": 0,
                                              "submitForm": [Function],
                                              "touched": Object {},
                                              "unregisterField": [Function],
                                              "validateField": [Function],
                                              "validateForm": [Function],
                                              "validateOnBlur": true,
                                              "validateOnChange": true,
                                              "values": Object {
                                                "title": "",
                                              },
                                            }
                                          }
                                        >
                                          <FormField
                                            inline={false}
                                          >
                                            <div
                                              className="field"
                                            >
                                              <FormInput
                                                as={[Function]}
                                                control={[Function]}
                                                error={null}
                                                fluid={true}
                                                id="issue"
                                                label="Issue"
                                                name="issue"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                placeholder="Issue number"
                                                value=""
                                              >
                                                <FormField
                                                  control={[Function]}
                                                  error={null}
                                                  fluid={true}
                                                  id="issue"
                                                  label="Issue"
                                                  name="issue"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  placeholder="Issue number"
                                                  value=""
                                                >
                                                  <div
                                                    className="field"
                                                  >
                                                    <label
                                                      htmlFor="issue"
                                                    >
                                                      Issue
                                                    </label>
                                                    <Input
                                                      fluid={true}
                                                      id="issue"
                                                      name="issue"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      placeholder="Issue number"
                                                      type="text"
                                                      value=""
                                                    >
                                                      <div
                                                        className="ui fluid input"
                                                      >
                                                        <input
                                                          id="issue"
                                                          name="issue"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          placeholder="Issue number"
                                                          type="text"
                                                          value=""
                                                        />
                                                      </div>
                                                    </Input>
                                                  </div>
                                                </FormField>
                                              </FormInput>
                                            </div>
                                          </FormField>
                                        </Component>
                                      </FieldInner>
                                    </FormikConnect(FieldInner)>
                                  </StringField>
                                  <StringField
                                    fieldPath="standard_number"
                                    inline={false}
                                    label="Standard number"
                                    placeholder="Standard number"
                                  >
                                    <FormikConnect(FieldInner)
                                      component={[Function]}
                                      name="standard_number"
                                    >
                                      <FieldInner
                                        component={[Function]}
                                        formik={
                                          Object {
                                            "dirty": false,
                                            "errors": Object {},
                                            "handleBlur": [Function],
                                            "handleChange": [Function],
                                            "handleReset": [Function],
                                            "handleSubmit": [Function],
                                            "initialValues": Object {
                                              "title": "",
                                            },
                                            "isSubmitting": false,
                                            "isValid": false,
                                            "isValidating": false,
                                            "registerField": [Function],
                                            "resetForm": [Function],
                                            "setError": [Function],
                                            "setErrors": [Function],
                                            "setFieldError": [Function],
                                            "setFieldTouched": [Function],
                                            "setFieldValue": [Function],
                                            "setFormikState": [Function],
                                            "setStatus": [Function],
                                            "setSubmitting": [Function],
                                            "setTouched": [Function],
                                            "setValues": [Function],
                                            "status": undefined,
                                            "submitCount": 0,
                                            "submitForm": [Function],
                                            "touched": Object {},
                                            "unregisterField": [Function],
                                            "validate": undefined,
                                            "validateField": [Function],
                                            "validateForm": [Function],
                                            "validateOnBlur": true,
                                            "validateOnChange": true,
                                            "validationSchema": ObjectSchema {
                                              "_blacklist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "_conditions": Array [],
                                              "_defaultDefault": [Function],
                                              "_deps": Array [],
                                              "_excludedEdges": Array [],
                                              "_exclusive": Object {},
                                              "_mutate": undefined,
                                              "_nodes": Array [
                                                "publication_year",
                                                "title",
                                              ],
                                              "_options": Object {
                                                "abortEarly": true,
                                                "recursive": true,
                                              },
                                              "_type": "object",
                                              "_typeError": [Function],
                                              "_whitelist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "fields": Object {
                                                "publication_year": NumberSchema {
                                                  "_blacklist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "_conditions": Array [],
                                                  "_deps": Array [],
                                                  "_exclusive": Object {
                                                    "integer": false,
                                                  },
                                                  "_mutate": undefined,
                                                  "_options": Object {
                                                    "abortEarly": true,
                                                    "recursive": true,
                                                  },
                                                  "_type": "number",
                                                  "_typeError": [Function],
                                                  "_whitelist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "tests": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                  ],
                                                },
                                                "title": StringSchema {
                                                  "_blacklist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "_conditions": Array [],
                                                  "_deps": Array [],
                                                  "_exclusive": Object {
                                                    "required": true,
                                                  },
                                                  "_mutate": undefined,
                                                  "_options": Object {
                                                    "abortEarly": true,
                                                    "recursive": true,
                                                  },
                                                  "_type": "string",
                                                  "_typeError": [Function],
                                                  "_whitelist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "tests": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                  ],
                                                },
                                              },
                                              "tests": Array [],
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                            "values": Object {
                                              "title": "",
                                            },
                                          }
                                        }
                                        name="standard_number"
                                      >
                                        <Component
                                          field={
                                            Object {
                                              "name": "standard_number",
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "value": undefined,
                                            }
                                          }
                                          form={
                                            Object {
                                              "dirty": false,
                                              "errors": Object {},
                                              "handleBlur": [Function],
                                              "handleChange": [Function],
                                              "handleReset": [Function],
                                              "handleSubmit": [Function],
                                              "initialValues": Object {
                                                "title": "",
                                              },
                                              "isSubmitting": false,
                                              "isValid": false,
                                              "isValidating": false,
                                              "registerField": [Function],
                                              "resetForm": [Function],
                                              "setError": [Function],
                                              "setErrors": [Function],
                                              "setFieldError": [Function],
                                              "setFieldTouched": [Function],
                                              "setFieldValue": [Function],
                                              "setFormikState": [Function],
                                              "setStatus": [Function],
                                              "setSubmitting": [Function],
                                              "setTouched": [Function],
                                              "setValues": [Function],
                                              "status": undefined,
                                              "submitCount": 0,
                                              "submitForm": [Function],
                                              "touched": Object {},
                                              "unregisterField": [Function],
                                              "validateField": [Function],
                                              "validateForm": [Function],
                                              "validateOnBlur": true,
                                              "validateOnChange": true,
                                              "values": Object {
                                                "title": "",
                                              },
                                            }
                                          }
                                        >
                                          <FormField
                                            inline={false}
                                          >
                                            <div
                                              className="field"
                                            >
                                              <FormInput
                                                as={[Function]}
                                                control={[Function]}
                                                error={null}
                                                fluid={true}
                                                id="standard_number"
                                                label="Standard number"
                                                name="standard_number"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                placeholder="Standard number"
                                                value=""
                                              >
                                                <FormField
                                                  control={[Function]}
                                                  error={null}
                                                  fluid={true}
                                                  id="standard_number"
                                                  label="Standard number"
                                                  name="standard_number"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  placeholder="Standard number"
                                                  value=""
                                                >
                                                  <div
                                                    className="field"
                                                  >
                                                    <label
                                                      htmlFor="standard_number"
                                                    >
                                                      Standard number
                                                    </label>
                                                    <Input
                                                      fluid={true}
                                                      id="standard_number"
                                                      name="standard_number"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      placeholder="Standard number"
                                                      type="text"
                                                      value=""
                                                    >
                                                      <div
                                                        className="ui fluid input"
                                                      >
                                                        <input
                                                          id="standard_number"
                                                          name="standard_number"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          placeholder="Standard number"
                                                          type="text"
                                                          value=""
                                                        />
                                                      </div>
                                                    </Input>
                                                  </div>
                                                </FormField>
                                              </FormInput>
                                            </div>
                                          </FormField>
                                        </Component>
                                      </FieldInner>
                                    </FormikConnect(FieldInner)>
                                  </StringField>
                                </div>
                              </FormGroup>
                              <FormGroup
                                widths="equal"
                              >
                                <div
                                  className="equal width fields"
                                >
                                  <StringField
                                    fieldPath="page"
                                    inline={false}
                                    label="Page"
                                    placeholder="Page number"
                                  >
                                    <FormikConnect(FieldInner)
                                      component={[Function]}
                                      name="page"
                                    >
                                      <FieldInner
                                        component={[Function]}
                                        formik={
                                          Object {
                                            "dirty": false,
                                            "errors": Object {},
                                            "handleBlur": [Function],
                                            "handleChange": [Function],
                                            "handleReset": [Function],
                                            "handleSubmit": [Function],
                                            "initialValues": Object {
                                              "title": "",
                                            },
                                            "isSubmitting": false,
                                            "isValid": false,
                                            "isValidating": false,
                                            "registerField": [Function],
                                            "resetForm": [Function],
                                            "setError": [Function],
                                            "setErrors": [Function],
                                            "setFieldError": [Function],
                                            "setFieldTouched": [Function],
                                            "setFieldValue": [Function],
                                            "setFormikState": [Function],
                                            "setStatus": [Function],
                                            "setSubmitting": [Function],
                                            "setTouched": [Function],
                                            "setValues": [Function],
                                            "status": undefined,
                                            "submitCount": 0,
                                            "submitForm": [Function],
                                            "touched": Object {},
                                            "unregisterField": [Function],
                                            "validate": undefined,
                                            "validateField": [Function],
                                            "validateForm": [Function],
                                            "validateOnBlur": true,
                                            "validateOnChange": true,
                                            "validationSchema": ObjectSchema {
                                              "_blacklist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "_conditions": Array [],
                                              "_defaultDefault": [Function],
                                              "_deps": Array [],
                                              "_excludedEdges": Array [],
                                              "_exclusive": Object {},
                                              "_mutate": undefined,
                                              "_nodes": Array [
                                                "publication_year",
                                                "title",
                                              ],
                                              "_options": Object {
                                                "abortEarly": true,
                                                "recursive": true,
                                              },
                                              "_type": "object",
                                              "_typeError": [Function],
                                              "_whitelist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "fields": Object {
                                                "publication_year": NumberSchema {
                                                  "_blacklist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "_conditions": Array [],
                                                  "_deps": Array [],
                                                  "_exclusive": Object {
                                                    "integer": false,
                                                  },
                                                  "_mutate": undefined,
                                                  "_options": Object {
                                                    "abortEarly": true,
                                                    "recursive": true,
                                                  },
                                                  "_type": "number",
                                                  "_typeError": [Function],
                                                  "_whitelist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "tests": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                  ],
                                                },
                                                "title": StringSchema {
                                                  "_blacklist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "_conditions": Array [],
                                                  "_deps": Array [],
                                                  "_exclusive": Object {
                                                    "required": true,
                                                  },
                                                  "_mutate": undefined,
                                                  "_options": Object {
                                                    "abortEarly": true,
                                                    "recursive": true,
                                                  },
                                                  "_type": "string",
                                                  "_typeError": [Function],
                                                  "_whitelist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "tests": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                  ],
                                                },
                                              },
                                              "tests": Array [],
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                            "values": Object {
                                              "title": "",
                                            },
                                          }
                                        }
                                        name="page"
                                      >
                                        <Component
                                          field={
                                            Object {
                                              "name": "page",
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "value": undefined,
                                            }
                                          }
                                          form={
                                            Object {
                                              "dirty": false,
                                              "errors": Object {},
                                              "handleBlur": [Function],
                                              "handleChange": [Function],
                                              "handleReset": [Function],
                                              "handleSubmit": [Function],
                                              "initialValues": Object {
                                                "title": "",
                                              },
                                              "isSubmitting": false,
                                              "isValid": false,
                                              "isValidating": false,
                                              "registerField": [Function],
                                              "resetForm": [Function],
                                              "setError": [Function],
                                              "setErrors": [Function],
                                              "setFieldError": [Function],
                                              "setFieldTouched": [Function],
                                              "setFieldValue": [Function],
                                              "setFormikState": [Function],
                                              "setStatus": [Function],
                                              "setSubmitting": [Function],
                                              "setTouched": [Function],
                                              "setValues": [Function],
                                              "status": undefined,
                                              "submitCount": 0,
                                              "submitForm": [Function],
                                              "touched": Object {},
                                              "unregisterField": [Function],
                                              "validateField": [Function],
                                              "validateForm": [Function],
                                              "validateOnBlur": true,
                                              "validateOnChange": true,
                                              "values": Object {
                                                "title": "",
                                              },
                                            }
                                          }
                                        >
                                          <FormField
                                            inline={false}
                                          >
                                            <div
                                              className="field"
                                            >
                                              <FormInput
                                                as={[Function]}
                                                control={[Function]}
                                                error={null}
                                                fluid={true}
                                                id="page"
                                                label="Page"
                                                name="page"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                placeholder="Page number"
                                                value=""
                                              >
                                                <FormField
                                                  control={[Function]}
                                                  error={null}
                                                  fluid={true}
                                                  id="page"
                                                  label="Page"
                                                  name="page"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  placeholder="Page number"
                                                  value=""
                                                >
                                                  <div
                                                    className="field"
                                                  >
                                                    <label
                                                      htmlFor="page"
                                                    >
                                                      Page
                                                    </label>
                                                    <Input
                                                      fluid={true}
                                                      id="page"
                                                      name="page"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      placeholder="Page number"
                                                      type="text"
                                                      value=""
                                                    >
                                                      <div
                                                        className="ui fluid input"
                                                      >
                                                        <input
                                                          id="page"
                                                          name="page"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          placeholder="Page number"
                                                          type="text"
                                                          value=""
                                                        />
                                                      </div>
                                                    </Input>
                                                  </div>
                                                </FormField>
                                              </FormInput>
                                            </div>
                                          </FormField>
                                        </Component>
                                      </FieldInner>
                                    </FormikConnect(FieldInner)>
                                  </StringField>
                                  <StringField
                                    fieldPath="publication_year"
                                    inline={false}
                                    label="Publication Year"
                                    placeholder="Publication Year"
                                  >
                                    <FormikConnect(FieldInner)
                                      component={[Function]}
                                      name="publication_year"
                                    >
                                      <FieldInner
                                        component={[Function]}
                                        formik={
                                          Object {
                                            "dirty": false,
                                            "errors": Object {},
                                            "handleBlur": [Function],
                                            "handleChange": [Function],
                                            "handleReset": [Function],
                                            "handleSubmit": [Function],
                                            "initialValues": Object {
                                              "title": "",
                                            },
                                            "isSubmitting": false,
                                            "isValid": false,
                                            "isValidating": false,
                                            "registerField": [Function],
                                            "resetForm": [Function],
                                            "setError": [Function],
                                            "setErrors": [Function],
                                            "setFieldError": [Function],
                                            "setFieldTouched": [Function],
                                            "setFieldValue": [Function],
                                            "setFormikState": [Function],
                                            "setStatus": [Function],
                                            "setSubmitting": [Function],
                                            "setTouched": [Function],
                                            "setValues": [Function],
                                            "status": undefined,
                                            "submitCount": 0,
                                            "submitForm": [Function],
                                            "touched": Object {},
                                            "unregisterField": [Function],
                                            "validate": undefined,
                                            "validateField": [Function],
                                            "validateForm": [Function],
                                            "validateOnBlur": true,
                                            "validateOnChange": true,
                                            "validationSchema": ObjectSchema {
                                              "_blacklist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "_conditions": Array [],
                                              "_defaultDefault": [Function],
                                              "_deps": Array [],
                                              "_excludedEdges": Array [],
                                              "_exclusive": Object {},
                                              "_mutate": undefined,
                                              "_nodes": Array [
                                                "publication_year",
                                                "title",
                                              ],
                                              "_options": Object {
                                                "abortEarly": true,
                                                "recursive": true,
                                              },
                                              "_type": "object",
                                              "_typeError": [Function],
                                              "_whitelist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "fields": Object {
                                                "publication_year": NumberSchema {
                                                  "_blacklist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "_conditions": Array [],
                                                  "_deps": Array [],
                                                  "_exclusive": Object {
                                                    "integer": false,
                                                  },
                                                  "_mutate": undefined,
                                                  "_options": Object {
                                                    "abortEarly": true,
                                                    "recursive": true,
                                                  },
                                                  "_type": "number",
                                                  "_typeError": [Function],
                                                  "_whitelist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "tests": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                  ],
                                                },
                                                "title": StringSchema {
                                                  "_blacklist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "_conditions": Array [],
                                                  "_deps": Array [],
                                                  "_exclusive": Object {
                                                    "required": true,
                                                  },
                                                  "_mutate": undefined,
                                                  "_options": Object {
                                                    "abortEarly": true,
                                                    "recursive": true,
                                                  },
                                                  "_type": "string",
                                                  "_typeError": [Function],
                                                  "_whitelist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "tests": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                  ],
                                                },
                                              },
                                              "tests": Array [],
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                            "values": Object {
                                              "title": "",
                                            },
                                          }
                                        }
                                        name="publication_year"
                                      >
                                        <Component
                                          field={
                                            Object {
                                              "name": "publication_year",
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "value": undefined,
                                            }
                                          }
                                          form={
                                            Object {
                                              "dirty": false,
                                              "errors": Object {},
                                              "handleBlur": [Function],
                                              "handleChange": [Function],
                                              "handleReset": [Function],
                                              "handleSubmit": [Function],
                                              "initialValues": Object {
                                                "title": "",
                                              },
                                              "isSubmitting": false,
                                              "isValid": false,
                                              "isValidating": false,
                                              "registerField": [Function],
                                              "resetForm": [Function],
                                              "setError": [Function],
                                              "setErrors": [Function],
                                              "setFieldError": [Function],
                                              "setFieldTouched": [Function],
                                              "setFieldValue": [Function],
                                              "setFormikState": [Function],
                                              "setStatus": [Function],
                                              "setSubmitting": [Function],
                                              "setTouched": [Function],
                                              "setValues": [Function],
                                              "status": undefined,
                                              "submitCount": 0,
                                              "submitForm": [Function],
                                              "touched": Object {},
                                              "unregisterField": [Function],
                                              "validateField": [Function],
                                              "validateForm": [Function],
                                              "validateOnBlur": true,
                                              "validateOnChange": true,
                                              "values": Object {
                                                "title": "",
                                              },
                                            }
                                          }
                                        >
                                          <FormField
                                            inline={false}
                                          >
                                            <div
                                              className="field"
                                            >
                                              <FormInput
                                                as={[Function]}
                                                control={[Function]}
                                                error={null}
                                                fluid={true}
                                                id="publication_year"
                                                label="Publication Year"
                                                name="publication_year"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                placeholder="Publication Year"
                                                value=""
                                              >
                                                <FormField
                                                  control={[Function]}
                                                  error={null}
                                                  fluid={true}
                                                  id="publication_year"
                                                  label="Publication Year"
                                                  name="publication_year"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  placeholder="Publication Year"
                                                  value=""
                                                >
                                                  <div
                                                    className="field"
                                                  >
                                                    <label
                                                      htmlFor="publication_year"
                                                    >
                                                      Publication Year
                                                    </label>
                                                    <Input
                                                      fluid={true}
                                                      id="publication_year"
                                                      name="publication_year"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      placeholder="Publication Year"
                                                      type="text"
                                                      value=""
                                                    >
                                                      <div
                                                        className="ui fluid input"
                                                      >
                                                        <input
                                                          id="publication_year"
                                                          name="publication_year"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          placeholder="Publication Year"
                                                          type="text"
                                                          value=""
                                                        />
                                                      </div>
                                                    </Input>
                                                  </div>
                                                </FormField>
                                              </FormInput>
                                            </div>
                                          </FormField>
                                        </Component>
                                      </FieldInner>
                                    </FormikConnect(FieldInner)>
                                  </StringField>
                                </div>
                              </FormGroup>
                              <TextField
                                fieldPath="note"
                                label="Note"
                                placeholder="Notes for the library"
                                rows={5}
                              >
                                <FormikConnect(FieldInner)
                                  component={[Function]}
                                  name="note"
                                >
                                  <FieldInner
                                    component={[Function]}
                                    formik={
                                      Object {
                                        "dirty": false,
                                        "errors": Object {},
                                        "handleBlur": [Function],
                                        "handleChange": [Function],
                                        "handleReset": [Function],
                                        "handleSubmit": [Function],
                                        "initialValues": Object {
                                          "title": "",
                                        },
                                        "isSubmitting": false,
                                        "isValid": false,
                                        "isValidating": false,
                                        "registerField": [Function],
                                        "resetForm": [Function],
                                        "setError": [Function],
                                        "setErrors": [Function],
                                        "setFieldError": [Function],
                                        "setFieldTouched": [Function],
                                        "setFieldValue": [Function],
                                        "setFormikState": [Function],
                                        "setStatus": [Function],
                                        "setSubmitting": [Function],
                                        "setTouched": [Function],
                                        "setValues": [Function],
                                        "status": undefined,
                                        "submitCount": 0,
                                        "submitForm": [Function],
                                        "touched": Object {},
                                        "unregisterField": [Function],
                                        "validate": undefined,
                                        "validateField": [Function],
                                        "validateForm": [Function],
                                        "validateOnBlur": true,
                                        "validateOnChange": true,
                                        "validationSchema": ObjectSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_defaultDefault": [Function],
                                          "_deps": Array [],
                                          "_excludedEdges": Array [],
                                          "_exclusive": Object {},
                                          "_mutate": undefined,
                                          "_nodes": Array [
                                            "publication_year",
                                            "title",
                                          ],
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "object",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "fields": Object {
                                            "publication_year": NumberSchema {
                                              "_blacklist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "_conditions": Array [],
                                              "_deps": Array [],
                                              "_exclusive": Object {
                                                "integer": false,
                                              },
                                              "_mutate": undefined,
                                              "_options": Object {
                                                "abortEarly": true,
                                                "recursive": true,
                                              },
                                              "_type": "number",
                                              "_typeError": [Function],
                                              "_whitelist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "tests": Array [
                                                [Function],
                                              ],
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                            "title": StringSchema {
                                              "_blacklist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "_conditions": Array [],
                                              "_deps": Array [],
                                              "_exclusive": Object {
                                                "required": true,
                                              },
                                              "_mutate": undefined,
                                              "_options": Object {
                                                "abortEarly": true,
                                                "recursive": true,
                                              },
                                              "_type": "string",
                                              "_typeError": [Function],
                                              "_whitelist": RefSet {
                                                "list": Set {},
                                                "refs": Map {},
                                              },
                                              "tests": Array [
                                                [Function],
                                              ],
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                          },
                                          "tests": Array [],
                                          "transforms": Array [
                                            [Function],
                                          ],
                                        },
                                        "values": Object {
                                          "title": "",
                                        },
                                      }
                                    }
                                    name="note"
                                  >
                                    <Component
                                      field={
                                        Object {
                                          "name": "note",
                                          "onBlur": [Function],
                                          "onChange": [Function],
                                          "value": undefined,
                                        }
                                      }
                                      form={
                                        Object {
                                          "dirty": false,
                                          "errors": Object {},
                                          "handleBlur": [Function],
                                          "handleChange": [Function],
                                          "handleReset": [Function],
                                          "handleSubmit": [Function],
                                          "initialValues": Object {
                                            "title": "",
                                          },
                                          "isSubmitting": false,
                                          "isValid": false,
                                          "isValidating": false,
                                          "registerField": [Function],
                                          "resetForm": [Function],
                                          "setError": [Function],
                                          "setErrors": [Function],
                                          "setFieldError": [Function],
                                          "setFieldTouched": [Function],
                                          "setFieldValue": [Function],
                                          "setFormikState": [Function],
                                          "setStatus": [Function],
                                          "setSubmitting": [Function],
                                          "setTouched": [Function],
                                          "setValues": [Function],
                                          "status": undefined,
                                          "submitCount": 0,
                                          "submitForm": [Function],
                                          "touched": Object {},
                                          "unregisterField": [Function],
                                          "validateField": [Function],
                                          "validateForm": [Function],
                                          "validateOnBlur": true,
                                          "validateOnChange": true,
                                          "values": Object {
                                            "title": "",
                                          },
                                        }
                                      }
                                    >
                                      <FormField>
                                        <div
                                          className="field"
                                        >
                                          <FormTextArea
                                            as={[Function]}
                                            control={[Function]}
                                            error={null}
                                            id="note"
                                            label="Note"
                                            name="note"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            placeholder="Notes for the library"
                                            rows={5}
                                            value=""
                                          >
                                            <FormField
                                              control={[Function]}
                                              error={null}
                                              id="note"
                                              label="Note"
                                              name="note"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              placeholder="Notes for the library"
                                              rows={5}
                                              value=""
                                            >
                                              <div
                                                className="field"
                                              >
                                                <label
                                                  htmlFor="note"
                                                >
                                                  Note
                                                </label>
                                                <TextArea
                                                  as="textarea"
                                                  id="note"
                                                  name="note"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  placeholder="Notes for the library"
                                                  rows={5}
                                                  value=""
                                                >
                                                  <Ref
                                                    innerRef={
                                                      Object {
                                                        "current": <textarea
                                                          id="note"
                                                          name="note"
                                                          placeholder="Notes for the library"
                                                          rows="5"
                                                        />,
                                                      }
                                                    }
                                                  >
                                                    <RefFindNode
                                                      innerRef={
                                                        Object {
                                                          "current": <textarea
                                                            id="note"
                                                            name="note"
                                                            placeholder="Notes for the library"
                                                            rows="5"
                                                          />,
                                                        }
                                                      }
                                                    >
                                                      <textarea
                                                        id="note"
                                                        name="note"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onInput={[Function]}
                                                        placeholder="Notes for the library"
                                                        rows={5}
                                                        value=""
                                                      />
                                                    </RefFindNode>
                                                  </Ref>
                                                </TextArea>
                                              </div>
                                            </FormField>
                                          </FormTextArea>
                                        </div>
                                      </FormField>
                                    </Component>
                                  </FieldInner>
                                </FormikConnect(FieldInner)>
                              </TextField>
                              <Button
                                as="button"
                                color="green"
                                disabled={false}
                                type="submit"
                              >
                                <Ref
                                  innerRef={
                                    Object {
                                      "current": <button
                                        class="ui green button"
                                        type="submit"
                                      >
                                        Submit
                                      </button>,
                                    }
                                  }
                                >
                                  <RefFindNode
                                    innerRef={
                                      Object {
                                        "current": <button
                                          class="ui green button"
                                          type="submit"
                                        >
                                          Submit
                                        </button>,
                                      }
                                    }
                                  >
                                    <button
                                      className="ui green button"
                                      onClick={[Function]}
                                      type="submit"
                                    >
                                      Submit
                                    </button>
                                  </RefFindNode>
                                </Ref>
                              </Button>
                            </form>
                          </Form>
                        </Formik>
                      </div>
                    </Container>
                  </BaseForm>
                </Connect(BaseForm)>
              </div>
            </Segment>
          </div>
        </Container>
      </DocumentRequestForm>
    </Provider>
  </Router>
</BrowserRouter>
`;
