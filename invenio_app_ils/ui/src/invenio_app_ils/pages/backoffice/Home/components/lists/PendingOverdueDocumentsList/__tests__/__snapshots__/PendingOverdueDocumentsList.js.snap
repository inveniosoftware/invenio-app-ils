// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PendingOverdueDocumentsList tests should load the details component 1`] = `
<Loader>
  <Error>
    <ResultsTable
      currentPage={1}
      fixed={false}
      headerActionClickHandler={null}
      headerActionComponent={null}
      name="pending overdue documents"
      paginationComponent={null}
      rowActionClickHandler={[Function]}
      rows={Array []}
      seeAllComponent={
        <SeeAllButton
          clickHandler={[Function]}
          disabled={false}
          fluid={false}
        />
      }
      showAllResults={false}
      showMaxRows={5}
      singleLine={false}
      subtitle="Documents with pending loan requests, no available items and an active loan that's overdue."
      title="Pending overdue documents"
    />
  </Error>
</Loader>
`;

exports[`PendingOverdueDocumentsList tests should render documents 1`] = `
<PendingOverdueDocumentsList
  data={
    Object {
      "hits": Array [
        Object {
          "created": "2018-01-01T10:05:00.000Z",
          "id": 1,
          "metadata": Object {
            "abstract": "This is an abstract",
            "authors": Array [
              Object {
                "full_name": "Jack E. Davis",
              },
            ],
            "edition": "ed. 1",
            "keywords": Object {
              "source": "X",
              "value": "Patata",
            },
            "languages": Array [
              "en",
            ],
            "pid": "docid-1",
            "title": "The Gulf: The Making of An American Sea",
          },
          "pid": "document1",
          "updated": "2018-01-01T10:05:00.000Z",
        },
        Object {
          "created": "2018-01-01T10:05:00.000Z",
          "id": 2,
          "metadata": Object {
            "abstract": "This is an abstract",
            "authors": Array [
              Object {
                "full_name": "Caroline Fraser",
              },
            ],
            "keywords": Object {
              "source": "X",
              "value": "Patata",
            },
            "languages": Array [
              "it",
            ],
            "pid": "docid-2",
            "title": "Prairie Fires: The American Dreams of Laura Ingalls Wilder",
          },
          "pid": "document2",
          "updated": "2018-01-01T10:05:00.000Z",
        },
      ],
      "total": 2,
    }
  }
  fetchPendingOverdueDocuments={[Function]}
  showMaxEntries={5}
>
  <Loader>
    <Error>
      <ResultsTable
        currentPage={1}
        fixed={false}
        headerActionClickHandler={null}
        headerActionComponent={null}
        name="pending overdue documents"
        paginationComponent={null}
        rowActionClickHandler={[Function]}
        rows={
          Array [
            Object {
              "ID": "document1",
              "Title": "The Gulf: The Making of An American Sea",
            },
            Object {
              "ID": "document2",
              "Title": "Prairie Fires: The American Dreams of Laura Ingalls Wilder",
            },
          ]
        }
        seeAllComponent={
          <SeeAllButton
            clickHandler={[Function]}
            disabled={false}
            fluid={false}
          />
        }
        showAllResults={false}
        showMaxRows={5}
        singleLine={false}
        subtitle="Documents with pending loan requests, no available items and an active loan that's overdue."
        title="Pending overdue documents"
      >
        <Grid>
          <div
            className="ui grid"
          >
            <GridRow>
              <div
                className="row"
              >
                <GridColumn
                  verticalAlign="middle"
                  width={16}
                >
                  <div
                    className="middle aligned sixteen wide column"
                  >
                    <Header
                      as="h3"
                      content="Pending overdue documents"
                      subheader="Documents with pending loan requests, no available items and an active loan that's overdue."
                    >
                      <h3
                        className="ui header"
                      >
                        Pending overdue documents
                        <HeaderSubheader
                          content="Documents with pending loan requests, no available items and an active loan that's overdue."
                        >
                          <div
                            className="sub header"
                          >
                            Documents with pending loan requests, no available items and an active loan that's overdue.
                          </div>
                        </HeaderSubheader>
                      </h3>
                    </Header>
                  </div>
                </GridColumn>
                <GridColumn
                  textAlign="right"
                  width={8}
                >
                  <div
                    className="right aligned eight wide column"
                  />
                </GridColumn>
              </div>
            </GridRow>
          </div>
        </Grid>
        <Table
          as="table"
          compact={true}
          selectable={true}
          striped={true}
        >
          <table
            className="ui selectable striped compact table"
          >
            <ResultsTableHeader
              columns={
                Array [
                  "ID",
                  "Title",
                ]
              }
              withRowAction={false}
            >
              <TableHeader
                as="thead"
              >
                <thead
                  className=""
                >
                  <TableRow
                    as="tr"
                    cellAs="td"
                    data-test="header"
                  >
                    <tr
                      className=""
                      data-test="header"
                    >
                      <TableHeaderCell
                        as="th"
                      >
                        <TableCell
                          as="th"
                          className=""
                        >
                          <th
                            className=""
                          />
                        </TableCell>
                      </TableHeaderCell>
                      <TableHeaderCell
                        as="th"
                        key="ID"
                      >
                        <TableCell
                          as="th"
                          className=""
                        >
                          <th
                            className=""
                          >
                            ID
                          </th>
                        </TableCell>
                      </TableHeaderCell>
                      <TableHeaderCell
                        as="th"
                        key="Title"
                      >
                        <TableCell
                          as="th"
                          className=""
                        >
                          <th
                            className=""
                          >
                            Title
                          </th>
                        </TableCell>
                      </TableHeaderCell>
                    </tr>
                  </TableRow>
                </thead>
              </TableHeader>
            </ResultsTableHeader>
            <ResultsTableBody
              columns={
                Array [
                  "ID",
                  "Title",
                ]
              }
              rowActionClickHandler={[Function]}
              rows={
                Array [
                  Object {
                    "ID": "document1",
                    "Title": "The Gulf: The Making of An American Sea",
                  },
                  Object {
                    "ID": "document2",
                    "Title": "Prairie Fires: The American Dreams of Laura Ingalls Wilder",
                  },
                ]
              }
            >
              <TableBody
                as="tbody"
              >
                <tbody
                  className=""
                >
                  <TableRow
                    as="tr"
                    cellAs="td"
                    data-test="document1"
                    key="document1"
                  >
                    <tr
                      className=""
                      data-test="document1"
                    >
                      <TableCell
                        as="td"
                        textAlign="center"
                      >
                        <td
                          className="center aligned"
                        >
                          <Button
                            as="button"
                            compact={true}
                            data-test="btn-view-details-document1"
                            icon="info"
                            onClick={[Function]}
                          >
                            <Ref
                              innerRef={
                                Object {
                                  "current": <button
                                    class="ui compact icon button"
                                    data-test="btn-view-details-document1"
                                  >
                                    <i
                                      aria-hidden="true"
                                      class="info icon"
                                    />
                                  </button>,
                                }
                              }
                            >
                              <RefFindNode
                                innerRef={
                                  Object {
                                    "current": <button
                                      class="ui compact icon button"
                                      data-test="btn-view-details-document1"
                                    >
                                      <i
                                        aria-hidden="true"
                                        class="info icon"
                                      />
                                    </button>,
                                  }
                                }
                              >
                                <button
                                  className="ui compact icon button"
                                  data-test="btn-view-details-document1"
                                  onClick={[Function]}
                                >
                                  <Icon
                                    as="i"
                                    name="info"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="info icon"
                                      onClick={[Function]}
                                    />
                                  </Icon>
                                </button>
                              </RefFindNode>
                            </Ref>
                          </Button>
                        </td>
                      </TableCell>
                      <TableCell
                        as="td"
                        data-test="ID-document1"
                        key="0-document1"
                      >
                        <td
                          className=""
                          data-test="ID-document1"
                        >
                          document1
                        </td>
                      </TableCell>
                      <TableCell
                        as="td"
                        data-test="Title-document1"
                        key="1-document1"
                      >
                        <td
                          className=""
                          data-test="Title-document1"
                        >
                          The Gulf: The Making of An American Sea
                        </td>
                      </TableCell>
                    </tr>
                  </TableRow>
                  <TableRow
                    as="tr"
                    cellAs="td"
                    data-test="document2"
                    key="document2"
                  >
                    <tr
                      className=""
                      data-test="document2"
                    >
                      <TableCell
                        as="td"
                        textAlign="center"
                      >
                        <td
                          className="center aligned"
                        >
                          <Button
                            as="button"
                            compact={true}
                            data-test="btn-view-details-document2"
                            icon="info"
                            onClick={[Function]}
                          >
                            <Ref
                              innerRef={
                                Object {
                                  "current": <button
                                    class="ui compact icon button"
                                    data-test="btn-view-details-document2"
                                  >
                                    <i
                                      aria-hidden="true"
                                      class="info icon"
                                    />
                                  </button>,
                                }
                              }
                            >
                              <RefFindNode
                                innerRef={
                                  Object {
                                    "current": <button
                                      class="ui compact icon button"
                                      data-test="btn-view-details-document2"
                                    >
                                      <i
                                        aria-hidden="true"
                                        class="info icon"
                                      />
                                    </button>,
                                  }
                                }
                              >
                                <button
                                  className="ui compact icon button"
                                  data-test="btn-view-details-document2"
                                  onClick={[Function]}
                                >
                                  <Icon
                                    as="i"
                                    name="info"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="info icon"
                                      onClick={[Function]}
                                    />
                                  </Icon>
                                </button>
                              </RefFindNode>
                            </Ref>
                          </Button>
                        </td>
                      </TableCell>
                      <TableCell
                        as="td"
                        data-test="ID-document2"
                        key="0-document2"
                      >
                        <td
                          className=""
                          data-test="ID-document2"
                        >
                          document2
                        </td>
                      </TableCell>
                      <TableCell
                        as="td"
                        data-test="Title-document2"
                        key="1-document2"
                      >
                        <td
                          className=""
                          data-test="Title-document2"
                        >
                          Prairie Fires: The American Dreams of Laura Ingalls Wilder
                        </td>
                      </TableCell>
                    </tr>
                  </TableRow>
                </tbody>
              </TableBody>
            </ResultsTableBody>
            <ResultsTableFooter
              allRowsNumber={2}
              columnsNumber={2}
              currentPage={1}
              paginationComponent={null}
              seeAllComponent={
                <SeeAllButton
                  clickHandler={[Function]}
                  disabled={false}
                  fluid={false}
                />
              }
              showAllResults={false}
              showMaxRows={5}
            />
          </table>
        </Table>
      </ResultsTable>
    </Error>
  </Loader>
</PendingOverdueDocumentsList>
`;

exports[`PendingOverdueDocumentsList tests should render show a message with no documents 1`] = `
<PendingOverdueDocumentsList
  data={
    Object {
      "hits": Array [],
      "total": 0,
    }
  }
  fetchPendingOverdueDocuments={[Function]}
  showMaxEntries={5}
>
  <Loader>
    <Error>
      <ResultsTable
        currentPage={1}
        fixed={false}
        headerActionClickHandler={null}
        headerActionComponent={null}
        name="pending overdue documents"
        paginationComponent={null}
        rowActionClickHandler={[Function]}
        rows={Array []}
        seeAllComponent={
          <SeeAllButton
            clickHandler={[Function]}
            disabled={false}
            fluid={false}
          />
        }
        showAllResults={false}
        showMaxRows={5}
        singleLine={false}
        subtitle="Documents with pending loan requests, no available items and an active loan that's overdue."
        title="Pending overdue documents"
      >
        <Grid>
          <div
            className="ui grid"
          >
            <GridRow>
              <div
                className="row"
              >
                <GridColumn
                  verticalAlign="middle"
                  width={16}
                >
                  <div
                    className="middle aligned sixteen wide column"
                  >
                    <Header
                      as="h3"
                      content="Pending overdue documents"
                      subheader="Documents with pending loan requests, no available items and an active loan that's overdue."
                    >
                      <h3
                        className="ui header"
                      >
                        Pending overdue documents
                        <HeaderSubheader
                          content="Documents with pending loan requests, no available items and an active loan that's overdue."
                        >
                          <div
                            className="sub header"
                          >
                            Documents with pending loan requests, no available items and an active loan that's overdue.
                          </div>
                        </HeaderSubheader>
                      </h3>
                    </Header>
                  </div>
                </GridColumn>
                <GridColumn
                  textAlign="right"
                  width={8}
                >
                  <div
                    className="right aligned eight wide column"
                  />
                </GridColumn>
              </div>
            </GridRow>
          </div>
        </Grid>
        <Message
          data-test="no-results"
        >
          <div
            className="ui message"
            data-test="no-results"
          >
            There are no 
            pending overdue documents
            .
          </div>
        </Message>
      </ResultsTable>
    </Error>
  </Loader>
</PendingOverdueDocumentsList>
`;
