// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OverdueLoansList tests should load the details component 1`] = `
<Loader>
  <Error>
    <ResultsTable
      currentPage={1}
      fixed={false}
      headerActionClickHandler={null}
      headerActionComponent={null}
      name="overdue loans"
      paginationComponent={null}
      renderSegment={true}
      rowActionClickHandler={[Function]}
      rows={Array []}
      seeAllComponent={
        <SeeAllButton
          clickHandler={[Function]}
          disabled={false}
          fluid={false}
        />
      }
      showAllResults={false}
      showMaxRows={5}
      singleLine={false}
      subtitle="Active loans that passed their end date."
      title="Overdue loans"
    />
  </Error>
</Loader>
`;

exports[`OverdueLoansList tests should render loans 1`] = `
<OverdueLoansList
  data={
    Object {
      "hits": Array [
        Object {
          "id": 1,
          "metadata": Object {
            "document_pid": "docid-1",
            "end_date": "2018-07-28",
            "item": Object {
              "barcode": 123,
            },
            "item_pid": "",
            "patron": Object {
              "email": "patron1@test.ch",
            },
            "patron_pid": "1",
            "pickup_location_pid": "locid-1",
            "pid": "loanid-1",
            "start_date": "2018-06-28",
            "state": "PENDING",
            "transaction_date": "2018-06-29",
            "transaction_location_pid": "locid-1",
            "transaction_user_pid": "user_pid",
          },
          "pid": "loan1",
        },
        Object {
          "id": 2,
          "metadata": Object {
            "document_pid": "docid-1",
            "end_date": "2018-07-28",
            "item": Object {
              "barcode": 123,
            },
            "item_pid": "itemid-2",
            "patron": Object {
              "email": "patron2@test.ch",
            },
            "patron_pid": "1",
            "pickup_location_pid": "locid-1",
            "pid": "loanid-2",
            "start_date": "2018-06-28",
            "state": "PENDING",
            "transaction_date": "2018-06-29",
            "transaction_location_pid": "locid-1",
            "transaction_user_pid": "user_pid",
          },
          "pid": "loan2",
        },
      ],
      "total": 2,
    }
  }
  fetchOverdueLoans={[Function]}
  showMaxEntries={5}
>
  <Loader>
    <Error>
      <ResultsTable
        currentPage={1}
        fixed={false}
        headerActionClickHandler={null}
        headerActionComponent={null}
        name="overdue loans"
        paginationComponent={null}
        renderSegment={true}
        rowActionClickHandler={[Function]}
        rows={
          Array [
            Object {
              "Actions": <Memo(Connect(OverdueLoanSendMailModal))
                loan={
                  Object {
                    "id": 1,
                    "metadata": Object {
                      "document_pid": "docid-1",
                      "end_date": "2018-07-28",
                      "item": Object {
                        "barcode": 123,
                      },
                      "item_pid": "",
                      "patron": Object {
                        "email": "patron1@test.ch",
                      },
                      "patron_pid": "1",
                      "pickup_location_pid": "locid-1",
                      "pid": "loanid-1",
                      "start_date": "2018-06-28",
                      "state": "PENDING",
                      "transaction_date": "2018-06-29",
                      "transaction_location_pid": "locid-1",
                      "transaction_user_pid": "user_pid",
                    },
                    "pid": "loan1",
                  }
                }
              />,
              "Expired": "last year",
              "ID": "loan1",
              "Item barcode": 123,
              "Patron ID": "1",
            },
            Object {
              "Actions": <Memo(Connect(OverdueLoanSendMailModal))
                loan={
                  Object {
                    "id": 2,
                    "metadata": Object {
                      "document_pid": "docid-1",
                      "end_date": "2018-07-28",
                      "item": Object {
                        "barcode": 123,
                      },
                      "item_pid": "itemid-2",
                      "patron": Object {
                        "email": "patron2@test.ch",
                      },
                      "patron_pid": "1",
                      "pickup_location_pid": "locid-1",
                      "pid": "loanid-2",
                      "start_date": "2018-06-28",
                      "state": "PENDING",
                      "transaction_date": "2018-06-29",
                      "transaction_location_pid": "locid-1",
                      "transaction_user_pid": "user_pid",
                    },
                    "pid": "loan2",
                  }
                }
              />,
              "Expired": "last year",
              "ID": "loan2",
              "Item barcode": 123,
              "Patron ID": "1",
            },
          ]
        }
        seeAllComponent={
          <SeeAllButton
            clickHandler={[Function]}
            disabled={false}
            fluid={false}
          />
        }
        showAllResults={false}
        showMaxRows={5}
        singleLine={false}
        subtitle="Active loans that passed their end date."
        title="Overdue loans"
      >
        <Segment>
          <div
            className="ui segment"
          >
            <Grid>
              <div
                className="ui grid"
              >
                <GridRow>
                  <div
                    className="row"
                  >
                    <GridColumn
                      verticalAlign="middle"
                      width={16}
                    >
                      <div
                        className="middle aligned sixteen wide column"
                      >
                        <Header
                          as="h3"
                          content="Overdue loans"
                          subheader="Active loans that passed their end date."
                        >
                          <h3
                            className="ui header"
                          >
                            Overdue loans
                            <HeaderSubheader
                              content="Active loans that passed their end date."
                            >
                              <div
                                className="sub header"
                              >
                                Active loans that passed their end date.
                              </div>
                            </HeaderSubheader>
                          </h3>
                        </Header>
                      </div>
                    </GridColumn>
                    <GridColumn
                      textAlign="right"
                      width={8}
                    >
                      <div
                        className="right aligned eight wide column"
                      />
                    </GridColumn>
                  </div>
                </GridRow>
              </div>
            </Grid>
            <Table
              as="table"
              compact={true}
              selectable={true}
              striped={true}
            >
              <table
                className="ui selectable striped compact table"
              >
                <ResultsTableHeader
                  columns={
                    Array [
                      "ID",
                      "Patron ID",
                      "Item barcode",
                      "Expired",
                      "Actions",
                    ]
                  }
                  withRowAction={false}
                >
                  <TableHeader
                    as="thead"
                  >
                    <thead
                      className=""
                    >
                      <TableRow
                        as="tr"
                        cellAs="td"
                        data-test="header"
                      >
                        <tr
                          className=""
                          data-test="header"
                        >
                          <TableHeaderCell
                            as="th"
                          >
                            <TableCell
                              as="th"
                              className=""
                            >
                              <th
                                className=""
                              />
                            </TableCell>
                          </TableHeaderCell>
                          <TableHeaderCell
                            as="th"
                            key="ID"
                          >
                            <TableCell
                              as="th"
                              className=""
                            >
                              <th
                                className=""
                              >
                                ID
                              </th>
                            </TableCell>
                          </TableHeaderCell>
                          <TableHeaderCell
                            as="th"
                            key="Patron ID"
                          >
                            <TableCell
                              as="th"
                              className=""
                            >
                              <th
                                className=""
                              >
                                Patron ID
                              </th>
                            </TableCell>
                          </TableHeaderCell>
                          <TableHeaderCell
                            as="th"
                            key="Item barcode"
                          >
                            <TableCell
                              as="th"
                              className=""
                            >
                              <th
                                className=""
                              >
                                Item barcode
                              </th>
                            </TableCell>
                          </TableHeaderCell>
                          <TableHeaderCell
                            as="th"
                            key="Expired"
                          >
                            <TableCell
                              as="th"
                              className=""
                            >
                              <th
                                className=""
                              >
                                Expired
                              </th>
                            </TableCell>
                          </TableHeaderCell>
                          <TableHeaderCell
                            as="th"
                            key="Actions"
                          >
                            <TableCell
                              as="th"
                              className=""
                            >
                              <th
                                className=""
                              >
                                Actions
                              </th>
                            </TableCell>
                          </TableHeaderCell>
                        </tr>
                      </TableRow>
                    </thead>
                  </TableHeader>
                </ResultsTableHeader>
                <ResultsTableBody
                  columns={
                    Array [
                      "ID",
                      "Patron ID",
                      "Item barcode",
                      "Expired",
                      "Actions",
                    ]
                  }
                  rowActionClickHandler={[Function]}
                  rows={
                    Array [
                      Object {
                        "Actions": <Memo(Connect(OverdueLoanSendMailModal))
                          loan={
                            Object {
                              "id": 1,
                              "metadata": Object {
                                "document_pid": "docid-1",
                                "end_date": "2018-07-28",
                                "item": Object {
                                  "barcode": 123,
                                },
                                "item_pid": "",
                                "patron": Object {
                                  "email": "patron1@test.ch",
                                },
                                "patron_pid": "1",
                                "pickup_location_pid": "locid-1",
                                "pid": "loanid-1",
                                "start_date": "2018-06-28",
                                "state": "PENDING",
                                "transaction_date": "2018-06-29",
                                "transaction_location_pid": "locid-1",
                                "transaction_user_pid": "user_pid",
                              },
                              "pid": "loan1",
                            }
                          }
                        />,
                        "Expired": "last year",
                        "ID": "loan1",
                        "Item barcode": 123,
                        "Patron ID": "1",
                      },
                      Object {
                        "Actions": <Memo(Connect(OverdueLoanSendMailModal))
                          loan={
                            Object {
                              "id": 2,
                              "metadata": Object {
                                "document_pid": "docid-1",
                                "end_date": "2018-07-28",
                                "item": Object {
                                  "barcode": 123,
                                },
                                "item_pid": "itemid-2",
                                "patron": Object {
                                  "email": "patron2@test.ch",
                                },
                                "patron_pid": "1",
                                "pickup_location_pid": "locid-1",
                                "pid": "loanid-2",
                                "start_date": "2018-06-28",
                                "state": "PENDING",
                                "transaction_date": "2018-06-29",
                                "transaction_location_pid": "locid-1",
                                "transaction_user_pid": "user_pid",
                              },
                              "pid": "loan2",
                            }
                          }
                        />,
                        "Expired": "last year",
                        "ID": "loan2",
                        "Item barcode": 123,
                        "Patron ID": "1",
                      },
                    ]
                  }
                >
                  <TableBody
                    as="tbody"
                  >
                    <tbody
                      className=""
                    >
                      <TableRow
                        as="tr"
                        cellAs="td"
                        data-test="loan1"
                        key="loan1"
                      >
                        <tr
                          className=""
                          data-test="loan1"
                        >
                          <TableCell
                            as="td"
                            textAlign="center"
                          >
                            <td
                              className="center aligned"
                            >
                              <Button
                                as="button"
                                compact={true}
                                data-test="btn-view-details-loan1"
                                icon="info"
                                onClick={[Function]}
                              >
                                <Ref
                                  innerRef={
                                    Object {
                                      "current": <button
                                        class="ui compact icon button"
                                        data-test="btn-view-details-loan1"
                                      >
                                        <i
                                          aria-hidden="true"
                                          class="info icon"
                                        />
                                      </button>,
                                    }
                                  }
                                >
                                  <RefFindNode
                                    innerRef={
                                      Object {
                                        "current": <button
                                          class="ui compact icon button"
                                          data-test="btn-view-details-loan1"
                                        >
                                          <i
                                            aria-hidden="true"
                                            class="info icon"
                                          />
                                        </button>,
                                      }
                                    }
                                  >
                                    <button
                                      className="ui compact icon button"
                                      data-test="btn-view-details-loan1"
                                      onClick={[Function]}
                                    >
                                      <Icon
                                        as="i"
                                        name="info"
                                      >
                                        <i
                                          aria-hidden="true"
                                          className="info icon"
                                          onClick={[Function]}
                                        />
                                      </Icon>
                                    </button>
                                  </RefFindNode>
                                </Ref>
                              </Button>
                            </td>
                          </TableCell>
                          <TableCell
                            as="td"
                            data-test="ID-loan1"
                            key="0-loan1"
                          >
                            <td
                              className=""
                              data-test="ID-loan1"
                            >
                              loan1
                            </td>
                          </TableCell>
                          <TableCell
                            as="td"
                            data-test="Patron ID-loan1"
                            key="1-loan1"
                          >
                            <td
                              className=""
                              data-test="Patron ID-loan1"
                            >
                              1
                            </td>
                          </TableCell>
                          <TableCell
                            as="td"
                            data-test="Item barcode-loan1"
                            key="2-loan1"
                          >
                            <td
                              className=""
                              data-test="Item barcode-loan1"
                            >
                              123
                            </td>
                          </TableCell>
                          <TableCell
                            as="td"
                            data-test="Expired-loan1"
                            key="3-loan1"
                          >
                            <td
                              className=""
                              data-test="Expired-loan1"
                            >
                              last year
                            </td>
                          </TableCell>
                          <TableCell
                            as="td"
                            data-test="Actions-loan1"
                            key="4-loan1"
                          >
                            <td
                              className=""
                              data-test="Actions-loan1"
                            >
                              <Connect(OverdueLoanSendMailModal)
                                loan={
                                  Object {
                                    "id": 1,
                                    "metadata": Object {
                                      "document_pid": "docid-1",
                                      "end_date": "2018-07-28",
                                      "item": Object {
                                        "barcode": 123,
                                      },
                                      "item_pid": "",
                                      "patron": Object {
                                        "email": "patron1@test.ch",
                                      },
                                      "patron_pid": "1",
                                      "pickup_location_pid": "locid-1",
                                      "pid": "loanid-1",
                                      "start_date": "2018-06-28",
                                      "state": "PENDING",
                                      "transaction_date": "2018-06-29",
                                      "transaction_location_pid": "locid-1",
                                      "transaction_user_pid": "user_pid",
                                    },
                                    "pid": "loan1",
                                  }
                                }
                              />
                            </td>
                          </TableCell>
                        </tr>
                      </TableRow>
                      <TableRow
                        as="tr"
                        cellAs="td"
                        data-test="loan2"
                        key="loan2"
                      >
                        <tr
                          className=""
                          data-test="loan2"
                        >
                          <TableCell
                            as="td"
                            textAlign="center"
                          >
                            <td
                              className="center aligned"
                            >
                              <Button
                                as="button"
                                compact={true}
                                data-test="btn-view-details-loan2"
                                icon="info"
                                onClick={[Function]}
                              >
                                <Ref
                                  innerRef={
                                    Object {
                                      "current": <button
                                        class="ui compact icon button"
                                        data-test="btn-view-details-loan2"
                                      >
                                        <i
                                          aria-hidden="true"
                                          class="info icon"
                                        />
                                      </button>,
                                    }
                                  }
                                >
                                  <RefFindNode
                                    innerRef={
                                      Object {
                                        "current": <button
                                          class="ui compact icon button"
                                          data-test="btn-view-details-loan2"
                                        >
                                          <i
                                            aria-hidden="true"
                                            class="info icon"
                                          />
                                        </button>,
                                      }
                                    }
                                  >
                                    <button
                                      className="ui compact icon button"
                                      data-test="btn-view-details-loan2"
                                      onClick={[Function]}
                                    >
                                      <Icon
                                        as="i"
                                        name="info"
                                      >
                                        <i
                                          aria-hidden="true"
                                          className="info icon"
                                          onClick={[Function]}
                                        />
                                      </Icon>
                                    </button>
                                  </RefFindNode>
                                </Ref>
                              </Button>
                            </td>
                          </TableCell>
                          <TableCell
                            as="td"
                            data-test="ID-loan2"
                            key="0-loan2"
                          >
                            <td
                              className=""
                              data-test="ID-loan2"
                            >
                              loan2
                            </td>
                          </TableCell>
                          <TableCell
                            as="td"
                            data-test="Patron ID-loan2"
                            key="1-loan2"
                          >
                            <td
                              className=""
                              data-test="Patron ID-loan2"
                            >
                              1
                            </td>
                          </TableCell>
                          <TableCell
                            as="td"
                            data-test="Item barcode-loan2"
                            key="2-loan2"
                          >
                            <td
                              className=""
                              data-test="Item barcode-loan2"
                            >
                              123
                            </td>
                          </TableCell>
                          <TableCell
                            as="td"
                            data-test="Expired-loan2"
                            key="3-loan2"
                          >
                            <td
                              className=""
                              data-test="Expired-loan2"
                            >
                              last year
                            </td>
                          </TableCell>
                          <TableCell
                            as="td"
                            data-test="Actions-loan2"
                            key="4-loan2"
                          >
                            <td
                              className=""
                              data-test="Actions-loan2"
                            >
                              <Connect(OverdueLoanSendMailModal)
                                loan={
                                  Object {
                                    "id": 2,
                                    "metadata": Object {
                                      "document_pid": "docid-1",
                                      "end_date": "2018-07-28",
                                      "item": Object {
                                        "barcode": 123,
                                      },
                                      "item_pid": "itemid-2",
                                      "patron": Object {
                                        "email": "patron2@test.ch",
                                      },
                                      "patron_pid": "1",
                                      "pickup_location_pid": "locid-1",
                                      "pid": "loanid-2",
                                      "start_date": "2018-06-28",
                                      "state": "PENDING",
                                      "transaction_date": "2018-06-29",
                                      "transaction_location_pid": "locid-1",
                                      "transaction_user_pid": "user_pid",
                                    },
                                    "pid": "loan2",
                                  }
                                }
                              />
                            </td>
                          </TableCell>
                        </tr>
                      </TableRow>
                    </tbody>
                  </TableBody>
                </ResultsTableBody>
                <ResultsTableFooter
                  allRowsNumber={2}
                  columnsNumber={5}
                  currentPage={1}
                  paginationComponent={null}
                  seeAllComponent={
                    <SeeAllButton
                      clickHandler={[Function]}
                      disabled={false}
                      fluid={false}
                    />
                  }
                  showAllResults={false}
                  showMaxRows={5}
                />
              </table>
            </Table>
          </div>
        </Segment>
      </ResultsTable>
    </Error>
  </Loader>
</OverdueLoansList>
`;

exports[`OverdueLoansList tests should render show a message with no loans 1`] = `
<OverdueLoansList
  data={
    Object {
      "hits": Array [],
      "total": 0,
    }
  }
  fetchOverdueLoans={[Function]}
  showMaxEntries={5}
>
  <Loader>
    <Error>
      <ResultsTable
        currentPage={1}
        fixed={false}
        headerActionClickHandler={null}
        headerActionComponent={null}
        name="overdue loans"
        paginationComponent={null}
        renderSegment={true}
        rowActionClickHandler={[Function]}
        rows={Array []}
        seeAllComponent={
          <SeeAllButton
            clickHandler={[Function]}
            disabled={false}
            fluid={false}
          />
        }
        showAllResults={false}
        showMaxRows={5}
        singleLine={false}
        subtitle="Active loans that passed their end date."
        title="Overdue loans"
      >
        <Segment>
          <div
            className="ui segment"
          >
            <Grid>
              <div
                className="ui grid"
              >
                <GridRow>
                  <div
                    className="row"
                  >
                    <GridColumn
                      verticalAlign="middle"
                      width={16}
                    >
                      <div
                        className="middle aligned sixteen wide column"
                      >
                        <Header
                          as="h3"
                          content="Overdue loans"
                          subheader="Active loans that passed their end date."
                        >
                          <h3
                            className="ui header"
                          >
                            Overdue loans
                            <HeaderSubheader
                              content="Active loans that passed their end date."
                            >
                              <div
                                className="sub header"
                              >
                                Active loans that passed their end date.
                              </div>
                            </HeaderSubheader>
                          </h3>
                        </Header>
                      </div>
                    </GridColumn>
                    <GridColumn
                      textAlign="right"
                      width={8}
                    >
                      <div
                        className="right aligned eight wide column"
                      />
                    </GridColumn>
                  </div>
                </GridRow>
              </div>
            </Grid>
            <Message
              data-test="no-results"
            >
              <div
                className="ui message"
                data-test="no-results"
              >
                There are no 
                overdue loans
                .
              </div>
            </Message>
          </div>
        </Segment>
      </ResultsTable>
    </Error>
  </Loader>
</OverdueLoansList>
`;
