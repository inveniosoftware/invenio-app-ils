// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OverdueLoansList tests should load the details component 1`] = `
<Loader>
  <Error>
    <ResultsTable
      currentPage={1}
      fixed={false}
      headerActionClickHandler={null}
      headerActionComponent={null}
      name="overdue loans"
      paginationComponent={null}
      renderSegment={true}
      rowActionClickHandler={[Function]}
      rows={Array []}
      seeAllComponent={
        <SeeAllButton
          clickHandler={[Function]}
          disabled={false}
          fluid={false}
        />
      }
      showMaxRows={5}
      singleLine={false}
      subtitle="Active loans with past due end date."
      title="Overdue loans"
    />
  </Error>
</Loader>
`;

exports[`OverdueLoansList tests should render loans 1`] = `
<Loader>
  <Error>
    <ResultsTable
      currentPage={1}
      fixed={false}
      headerActionClickHandler={null}
      headerActionComponent={null}
      name="overdue loans"
      paginationComponent={null}
      renderSegment={true}
      rowActionClickHandler={[Function]}
      rows={
        Array [
          Object {
            "Actions": <Memo(Connect(SendMailModal))
              loan={
                Object {
                  "created": "2018-01-01T10:05:00.000Z",
                  "id": 1,
                  "metadata": Object {
                    "document_pid": "doc1",
                    "end_date": "2018-01-01T10:05:00.000Z",
                    "item": Object {
                      "barcode": 123,
                    },
                    "patron_pid": "patron_1",
                    "pid": "loan1",
                    "start_date": "2018-01-01T10:05:00.000Z",
                  },
                  "pid": "loan1",
                  "updated": "2018-01-01T10:05:00.000Z",
                }
              }
            />,
            "End date": "2018-01-01",
            "ID": "loan1",
            "Item barcode": 123,
            "Patron ID": "patron_1",
          },
          Object {
            "Actions": <Memo(Connect(SendMailModal))
              loan={
                Object {
                  "created": "2018-01-01T10:05:00.000Z",
                  "id": 2,
                  "metadata": Object {
                    "document_pid": "doc1",
                    "end_date": "2018-01-01T10:05:00.000Z",
                    "item": Object {
                      "barcode": 123,
                    },
                    "patron_pid": "patron_2",
                    "pid": "loan2",
                    "start_date": "2018-01-01T10:05:00.000Z",
                  },
                  "pid": "loan2",
                  "updated": "2018-01-01T10:05:00.000Z",
                }
              }
            />,
            "End date": "2018-01-01",
            "ID": "loan2",
            "Item barcode": 123,
            "Patron ID": "patron_2",
          },
        ]
      }
      seeAllComponent={
        <SeeAllButton
          clickHandler={[Function]}
          disabled={false}
          fluid={false}
        />
      }
      showMaxRows={5}
      singleLine={false}
      subtitle="Active loans with past due end date."
      title="Overdue loans"
    />
  </Error>
</Loader>
`;

exports[`OverdueLoansList tests should render show a message with no loans 1`] = `
<OverdueLoansList
  data={
    Object {
      "hits": Array [],
      "total": 0,
    }
  }
  fetchOverdueLoans={[Function]}
  showMaxEntries={5}
>
  <Loader>
    <Error>
      <ResultsTable
        currentPage={1}
        fixed={false}
        headerActionClickHandler={null}
        headerActionComponent={null}
        name="overdue loans"
        paginationComponent={null}
        renderSegment={true}
        rowActionClickHandler={[Function]}
        rows={Array []}
        seeAllComponent={
          <SeeAllButton
            clickHandler={[Function]}
            disabled={false}
            fluid={false}
          />
        }
        showMaxRows={5}
        singleLine={false}
        subtitle="Active loans with past due end date."
        title="Overdue loans"
      >
        <Segment>
          <div
            className="ui segment"
          >
            <Grid>
              <div
                className="ui grid"
              >
                <GridRow>
                  <div
                    className="row"
                  >
                    <GridColumn
                      verticalAlign="middle"
                      width={13}
                    >
                      <div
                        className="middle aligned thirteen wide column"
                      >
                        <Header
                          as="h3"
                          content="Overdue loans"
                          subheader="Active loans with past due end date."
                        >
                          <h3
                            className="ui header"
                          >
                            Overdue loans
                            <HeaderSubheader
                              content="Active loans with past due end date."
                            >
                              <div
                                className="sub header"
                              >
                                Active loans with past due end date.
                              </div>
                            </HeaderSubheader>
                          </h3>
                        </Header>
                      </div>
                    </GridColumn>
                    <GridColumn
                      textAlign="right"
                      width={3}
                    >
                      <div
                        className="right aligned three wide column"
                      />
                    </GridColumn>
                  </div>
                </GridRow>
              </div>
            </Grid>
            <Message
              data-test="no-results"
            >
              <div
                className="ui message"
                data-test="no-results"
              >
                There are no 
                overdue loans
                .
              </div>
            </Message>
          </div>
        </Segment>
      </ResultsTable>
    </Error>
  </Loader>
</OverdueLoansList>
`;
