// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LoanDetails should render an error when fetch fails 1`] = `
<WithLoader
  actionLoading={false}
  data={Object {}}
  error={
    Object {
      "message": "error",
    }
  }
  fetchLoanDetails={[Function]}
  isLoading={false}
  loanActionError={false}
  postLoanAction={[Function]}
>
  <WithError
    actionLoading={false}
    data={Object {}}
    error={
      Object {
        "message": "error",
      }
    }
    fetchLoanDetails={[Function]}
    loanActionError={false}
    postLoanAction={[Function]}
  >
    <ApiError
      error={
        Object {
          "message": "error",
        }
      }
    >
      <Message
        content="error"
        header="Oups, failed to fetch data from API!"
        icon="exclamation"
      >
        <div
          className="ui icon message"
        >
          <Icon
            as="i"
            name="exclamation"
          >
            <i
              aria-hidden="true"
              className="exclamation icon"
            />
          </Icon>
          <MessageContent>
            <div
              className="content"
            >
              <MessageHeader
                content="Oups, failed to fetch data from API!"
              >
                <div
                  className="header"
                >
                  Oups, failed to fetch data from API!
                </div>
              </MessageHeader>
              <p>
                error
              </p>
            </div>
          </MessageContent>
        </div>
      </Message>
    </ApiError>
  </WithError>
</WithLoader>
`;

exports[`LoanDetails should render metadata and actions when fetch succeeds 1`] = `
<WithLoader
  actionLoading={false}
  data={
    Object {
      "availableActions": Object {
        "action": "action",
      },
      "metadata": Object {
        "title": "title",
      },
    }
  }
  fetchLoanDetails={[Function]}
  isLoading={false}
  loanActionError={false}
  postLoanAction={[Function]}
>
  <WithError
    actionLoading={false}
    data={
      Object {
        "availableActions": Object {
          "action": "action",
        },
        "metadata": Object {
          "title": "title",
        },
      }
    }
    fetchLoanDetails={[Function]}
    loanActionError={false}
    postLoanAction={[Function]}
  >
    <LoanDetails
      actionLoading={false}
      data={
        Object {
          "availableActions": Object {
            "action": "action",
          },
          "metadata": Object {
            "title": "title",
          },
        }
      }
      fetchLoanDetails={[Function]}
      loanActionError={false}
      postLoanAction={[Function]}
    >
      <Container>
        <div
          className="ui container"
        >
          <LoanMetadata
            actionLoading={false}
            data={
              Object {
                "availableActions": Object {
                  "action": "action",
                },
                "metadata": Object {
                  "title": "title",
                },
              }
            }
            fetchLoanDetails={[Function]}
            loanActionError={false}
            postLoanAction={[Function]}
          >
            <Segment>
              <div
                className="ui segment"
              >
                <Grid>
                  <div
                    className="ui grid"
                  >
                    <GridColumn>
                      <div
                        className="column"
                      >
                        <h1>
                          Loan - 
                        </h1>
                        <Form
                          as="form"
                        >
                          <form
                            className="ui form"
                            onSubmit={[Function]}
                          >
                            <FormField
                              key="title"
                              name="loan-field"
                            >
                              <div
                                className="field"
                                name="loan-field"
                              >
                                <label
                                  className="field-name"
                                >
                                  title
                                </label>
                                <p>
                                  title
                                </p>
                              </div>
                            </FormField>
                          </form>
                        </Form>
                      </div>
                    </GridColumn>
                  </div>
                </Grid>
              </div>
            </Segment>
          </LoanMetadata>
          <LoanActions
            actionLoading={false}
            data={
              Object {
                "availableActions": Object {
                  "action": "action",
                },
                "metadata": Object {
                  "title": "title",
                },
              }
            }
            fetchLoanDetails={[Function]}
            loanActionError={false}
            onAction={[Function]}
            postLoanAction={[Function]}
          >
            <List
              horizontal={true}
            >
              <div
                className="ui horizontal list"
                role="list"
              >
                <ListItem
                  key="action"
                >
                  <div
                    className="item"
                    onClick={[Function]}
                    role="listitem"
                  >
                    <Button
                      as="button"
                      onClick={[Function]}
                      primary={true}
                      role="button"
                    >
                      <button
                        className="ui primary button"
                        onClick={[Function]}
                        role="button"
                      >
                        action
                      </button>
                    </Button>
                  </div>
                </ListItem>
              </div>
            </List>
          </LoanActions>
        </div>
      </Container>
    </LoanDetails>
  </WithError>
</WithLoader>
`;
