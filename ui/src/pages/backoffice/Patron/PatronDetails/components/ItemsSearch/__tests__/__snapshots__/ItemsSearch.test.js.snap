// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PatronLoans tests should load the ItemsSearch component 1`] = `
<Fragment>
  <Container
    className="search-bar spaced"
  >
    <SearchBar
      action={
        Object {
          "icon": "search",
          "onClick": [Function],
        }
      }
      currentQueryString=""
      executeSearch={[Function]}
      onInputChange={[Function]}
      onPaste={[Function]}
      placeholder="Type or paste to search for physical copies..."
    />
  </Container>
  <Grid
    className="items-search-container"
    columns={1}
    relaxed={true}
    stackable={true}
  >
    <GridColumn
      width={16}
    >
      <Loader>
        <Error>
          <div
            className="results-list"
          >
            <Connect(ItemsResultsList)
              clearResults={[MockFunction]}
              clearSearchQuery={[Function]}
              patronPid="2"
              results={
                Object {
                  "hits": Array [],
                }
              }
            />
          </div>
        </Error>
      </Loader>
    </GridColumn>
  </Grid>
</Fragment>
`;

exports[`PatronLoans tests should render items in search 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <ItemsSearch
        checkoutItem={[MockFunction]}
        clearResults={[MockFunction]}
        fetchItems={[MockFunction]}
        fetchUpdatedCurrentLoans={[MockFunction]}
        items={
          Object {
            "hits": Array [
              Object {
                "created": "2018-01-01T10:05:00.000Z",
                "id": "1",
                "metadata": Object {
                  "barcode": "44444",
                  "circulation": Object {},
                  "document": Object {
                    "title": "Here is a title",
                  },
                  "document_pid": "doc1",
                  "internal_location": Object {
                    "location": Object {
                      "name": "Somewhere",
                    },
                  },
                  "medium": "book",
                  "pid": "item1",
                  "shelf": "P",
                  "status": "CAN_CIRCULATE",
                },
                "pid": "item1",
                "updated": "2018-01-01T10:05:00.000Z",
              },
            ],
            "total": 1,
          }
        }
        patronDetails={
          Object {
            "email": "name@test.ch",
            "name": "Name",
            "user_pid": "2",
          }
        }
        queryString="searched"
        updateQueryString={[MockFunction]}
      >
        <Container
          className="search-bar spaced"
        >
          <div
            className="ui container search-bar spaced"
          >
            <SearchBar
              action={
                Object {
                  "icon": "search",
                  "onClick": [Function],
                }
              }
              currentQueryString="searched"
              executeSearch={[Function]}
              onInputChange={[Function]}
              onPaste={[Function]}
              placeholder="Type or paste to search for physical copies..."
            >
              <Input
                action={
                  Object {
                    "icon": "search",
                    "onClick": [Function],
                  }
                }
                className="undefined ils-searchbar"
                fluid={true}
                onChange={[Function]}
                onKeyPress={[Function]}
                onPaste={[Function]}
                placeholder="Type or paste to search for physical copies..."
                size="big"
                type="text"
                value="searched"
              >
                <div
                  className="ui big fluid action input undefined ils-searchbar"
                  onPaste={[Function]}
                >
                  <input
                    onChange={[Function]}
                    onKeyPress={[Function]}
                    placeholder="Type or paste to search for physical copies..."
                    type="text"
                    value="searched"
                  />
                  <Button
                    as="button"
                    icon="search"
                    onClick={[Function]}
                  >
                    <Ref
                      innerRef={
                        Object {
                          "current": <button
                            class="ui icon button"
                          >
                            <i
                              aria-hidden="true"
                              class="search icon"
                            />
                          </button>,
                        }
                      }
                    >
                      <RefFindNode
                        innerRef={
                          Object {
                            "current": <button
                              class="ui icon button"
                            >
                              <i
                                aria-hidden="true"
                                class="search icon"
                              />
                            </button>,
                          }
                        }
                      >
                        <button
                          className="ui icon button"
                          onClick={[Function]}
                        >
                          <Icon
                            as="i"
                            name="search"
                          >
                            <i
                              aria-hidden="true"
                              className="search icon"
                              onClick={[Function]}
                            />
                          </Icon>
                        </button>
                      </RefFindNode>
                    </Ref>
                  </Button>
                </div>
              </Input>
            </SearchBar>
          </div>
        </Container>
        <Grid
          className="items-search-container"
          columns={1}
          relaxed={true}
          stackable={true}
        >
          <div
            className="ui stackable relaxed one column grid items-search-container"
          >
            <GridColumn
              width={16}
            >
              <div
                className="sixteen wide column"
              >
                <Loader>
                  <Error>
                    <div
                      className="results-list"
                    >
                      <Connect(ItemsResultsList)
                        clearResults={[MockFunction]}
                        clearSearchQuery={[Function]}
                        patronPid="2"
                        results={
                          Object {
                            "hits": Array [
                              Object {
                                "created": "2018-01-01T10:05:00.000Z",
                                "id": "1",
                                "metadata": Object {
                                  "barcode": "44444",
                                  "circulation": Object {},
                                  "document": Object {
                                    "title": "Here is a title",
                                  },
                                  "document_pid": "doc1",
                                  "internal_location": Object {
                                    "location": Object {
                                      "name": "Somewhere",
                                    },
                                  },
                                  "medium": "book",
                                  "pid": "item1",
                                  "shelf": "P",
                                  "status": "CAN_CIRCULATE",
                                },
                                "pid": "item1",
                                "updated": "2018-01-01T10:05:00.000Z",
                              },
                            ],
                            "total": 1,
                          }
                        }
                      >
                        <ItemsResultsList
                          checkoutItem={[Function]}
                          clearResults={[MockFunction]}
                          clearSearchQuery={[Function]}
                          patronPid="2"
                          results={
                            Object {
                              "hits": Array [
                                Object {
                                  "created": "2018-01-01T10:05:00.000Z",
                                  "id": "1",
                                  "metadata": Object {
                                    "barcode": "44444",
                                    "circulation": Object {},
                                    "document": Object {
                                      "title": "Here is a title",
                                    },
                                    "document_pid": "doc1",
                                    "internal_location": Object {
                                      "location": Object {
                                        "name": "Somewhere",
                                      },
                                    },
                                    "medium": "book",
                                    "pid": "item1",
                                    "shelf": "P",
                                    "status": "CAN_CIRCULATE",
                                  },
                                  "pid": "item1",
                                  "updated": "2018-01-01T10:05:00.000Z",
                                },
                              ],
                              "total": 1,
                            }
                          }
                        >
                          <Loader>
                            <p>
                              Found 
                              1
                               item(s).
                            </p>
                            <ResultsTable
                              columns={
                                Array [
                                  Object {
                                    "field": "metadata.barcode",
                                    "formatter": [Function],
                                    "title": "Barcode",
                                  },
                                  Object {
                                    "field": "metadata.status",
                                    "title": "Status",
                                  },
                                  Object {
                                    "field": "metadata.medium",
                                    "title": "Medium",
                                  },
                                  Object {
                                    "field": "metadata.circulation.state",
                                    "title": "Circulation status",
                                  },
                                  Object {
                                    "field": "",
                                    "formatter": [Function],
                                    "title": "Actions",
                                  },
                                ]
                              }
                              currentPage={1}
                              data={
                                Array [
                                  Object {
                                    "created": "2018-01-01T10:05:00.000Z",
                                    "id": "1",
                                    "metadata": Object {
                                      "barcode": "44444",
                                      "circulation": Object {},
                                      "document": Object {
                                        "title": "Here is a title",
                                      },
                                      "document_pid": "doc1",
                                      "internal_location": Object {
                                        "location": Object {
                                          "name": "Somewhere",
                                        },
                                      },
                                      "medium": "book",
                                      "pid": "item1",
                                      "shelf": "P",
                                      "status": "CAN_CIRCULATE",
                                    },
                                    "pid": "item1",
                                    "updated": "2018-01-01T10:05:00.000Z",
                                  },
                                ]
                              }
                              headerActionComponent={null}
                              name="items"
                              paginationComponent={null}
                              seeAllComponent={null}
                              showAllResults={false}
                              singleLine={false}
                              subtitle=""
                              title=""
                            >
                              <Table
                                as="table"
                                compact={true}
                                name="items"
                                selectable={true}
                                striped={true}
                                subtitle=""
                                title=""
                                unstackable={true}
                              >
                                <table
                                  className="ui selectable striped unstackable compact table"
                                  name="items"
                                  subtitle=""
                                  title=""
                                >
                                  <ResultsTableHeader
                                    columns={
                                      Array [
                                        Object {
                                          "field": "metadata.barcode",
                                          "formatter": [Function],
                                          "title": "Barcode",
                                        },
                                        Object {
                                          "field": "metadata.status",
                                          "title": "Status",
                                        },
                                        Object {
                                          "field": "metadata.medium",
                                          "title": "Medium",
                                        },
                                        Object {
                                          "field": "metadata.circulation.state",
                                          "title": "Circulation status",
                                        },
                                        Object {
                                          "field": "",
                                          "formatter": [Function],
                                          "title": "Actions",
                                        },
                                      ]
                                    }
                                  >
                                    <TableHeader
                                      as="thead"
                                    >
                                      <thead
                                        className=""
                                      >
                                        <TableRow
                                          as="tr"
                                          cellAs="td"
                                          data-test="header"
                                        >
                                          <tr
                                            className=""
                                            data-test="header"
                                          >
                                            <TableHeaderCell
                                              as="th"
                                              key="Barcode"
                                            >
                                              <TableCell
                                                as="th"
                                                className=""
                                              >
                                                <th
                                                  className=""
                                                >
                                                  Barcode
                                                </th>
                                              </TableCell>
                                            </TableHeaderCell>
                                            <TableHeaderCell
                                              as="th"
                                              key="Status"
                                            >
                                              <TableCell
                                                as="th"
                                                className=""
                                              >
                                                <th
                                                  className=""
                                                >
                                                  Status
                                                </th>
                                              </TableCell>
                                            </TableHeaderCell>
                                            <TableHeaderCell
                                              as="th"
                                              key="Medium"
                                            >
                                              <TableCell
                                                as="th"
                                                className=""
                                              >
                                                <th
                                                  className=""
                                                >
                                                  Medium
                                                </th>
                                              </TableCell>
                                            </TableHeaderCell>
                                            <TableHeaderCell
                                              as="th"
                                              key="Circulation status"
                                            >
                                              <TableCell
                                                as="th"
                                                className=""
                                              >
                                                <th
                                                  className=""
                                                >
                                                  Circulation status
                                                </th>
                                              </TableCell>
                                            </TableHeaderCell>
                                            <TableHeaderCell
                                              as="th"
                                              key="Actions"
                                            >
                                              <TableCell
                                                as="th"
                                                className=""
                                              >
                                                <th
                                                  className=""
                                                >
                                                  Actions
                                                </th>
                                              </TableCell>
                                            </TableHeaderCell>
                                          </tr>
                                        </TableRow>
                                      </thead>
                                    </TableHeader>
                                  </ResultsTableHeader>
                                  <ResultsTableBody
                                    columns={
                                      Array [
                                        Object {
                                          "field": "metadata.barcode",
                                          "formatter": [Function],
                                          "title": "Barcode",
                                        },
                                        Object {
                                          "field": "metadata.status",
                                          "title": "Status",
                                        },
                                        Object {
                                          "field": "metadata.medium",
                                          "title": "Medium",
                                        },
                                        Object {
                                          "field": "metadata.circulation.state",
                                          "title": "Circulation status",
                                        },
                                        Object {
                                          "field": "",
                                          "formatter": [Function],
                                          "title": "Actions",
                                        },
                                      ]
                                    }
                                    rows={
                                      Array [
                                        Object {
                                          "created": "2018-01-01T10:05:00.000Z",
                                          "id": "1",
                                          "metadata": Object {
                                            "barcode": "44444",
                                            "circulation": Object {},
                                            "document": Object {
                                              "title": "Here is a title",
                                            },
                                            "document_pid": "doc1",
                                            "internal_location": Object {
                                              "location": Object {
                                                "name": "Somewhere",
                                              },
                                            },
                                            "medium": "book",
                                            "pid": "item1",
                                            "shelf": "P",
                                            "status": "CAN_CIRCULATE",
                                          },
                                          "pid": "item1",
                                          "updated": "2018-01-01T10:05:00.000Z",
                                        },
                                      ]
                                    }
                                  >
                                    <TableBody
                                      as="tbody"
                                    >
                                      <tbody
                                        className=""
                                      >
                                        <TableRow
                                          as="tr"
                                          cellAs="td"
                                          data-test="item1"
                                          key="item1"
                                        >
                                          <tr
                                            className=""
                                            data-test="item1"
                                          >
                                            <TableCell
                                              as="td"
                                              data-label="Barcode"
                                              data-test="0-item1"
                                              key="0-item1"
                                            >
                                              <td
                                                className=""
                                                data-label="Barcode"
                                                data-test="0-item1"
                                              >
                                                <Link
                                                  data-test="item1"
                                                  to="/backoffice/items/item1"
                                                >
                                                  <LinkAnchor
                                                    data-test="item1"
                                                    href="/backoffice/items/item1"
                                                    navigate={[Function]}
                                                  >
                                                    <a
                                                      data-test="item1"
                                                      href="/backoffice/items/item1"
                                                      onClick={[Function]}
                                                    >
                                                      44444
                                                    </a>
                                                  </LinkAnchor>
                                                </Link>
                                              </td>
                                            </TableCell>
                                            <TableCell
                                              as="td"
                                              data-label="Status"
                                              data-test="1-item1"
                                              key="1-item1"
                                            >
                                              <td
                                                className=""
                                                data-label="Status"
                                                data-test="1-item1"
                                              >
                                                CAN_CIRCULATE
                                              </td>
                                            </TableCell>
                                            <TableCell
                                              as="td"
                                              data-label="Medium"
                                              data-test="2-item1"
                                              key="2-item1"
                                            >
                                              <td
                                                className=""
                                                data-label="Medium"
                                                data-test="2-item1"
                                              >
                                                book
                                              </td>
                                            </TableCell>
                                            <TableCell
                                              as="td"
                                              data-label="Circulation status"
                                              data-test="3-item1"
                                              key="3-item1"
                                            >
                                              <td
                                                className=""
                                                data-label="Circulation status"
                                                data-test="3-item1"
                                              >
                                                -
                                              </td>
                                            </TableCell>
                                            <TableCell
                                              as="td"
                                              data-label="Actions"
                                              data-test="4-item1"
                                              key="4-item1"
                                            >
                                              <td
                                                className=""
                                                data-label="Actions"
                                                data-test="4-item1"
                                              >
                                                <Button
                                                  as="button"
                                                  content="Checkout"
                                                  onClick={[Function]}
                                                >
                                                  <Ref
                                                    innerRef={
                                                      Object {
                                                        "current": <button
                                                          class="ui button"
                                                        >
                                                          Checkout
                                                        </button>,
                                                      }
                                                    }
                                                  >
                                                    <RefFindNode
                                                      innerRef={
                                                        Object {
                                                          "current": <button
                                                            class="ui button"
                                                          >
                                                            Checkout
                                                          </button>,
                                                        }
                                                      }
                                                    >
                                                      <button
                                                        className="ui button"
                                                        onClick={[Function]}
                                                      >
                                                        Checkout
                                                      </button>
                                                    </RefFindNode>
                                                  </Ref>
                                                </Button>
                                              </td>
                                            </TableCell>
                                          </tr>
                                        </TableRow>
                                      </tbody>
                                    </TableBody>
                                  </ResultsTableBody>
                                  <ResultsTableFooter
                                    allRowsNumber={1}
                                    columnsNumber={5}
                                    currentPage={1}
                                    paginationComponent={null}
                                    seeAllComponent={null}
                                    showAllResults={false}
                                  />
                                </table>
                              </Table>
                            </ResultsTable>
                          </Loader>
                        </ItemsResultsList>
                      </Connect(ItemsResultsList)>
                    </div>
                  </Error>
                </Loader>
              </div>
            </GridColumn>
          </div>
        </Grid>
      </ItemsSearch>
    </Provider>
  </Router>
</BrowserRouter>
`;
