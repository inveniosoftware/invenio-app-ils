// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Extend loan button tests should match snapshot 1`] = `
<ExtendButton
  extendLoan={[Function]}
  loan={
    Object {
      "availableActions": Object {
        "extend": "url/extend",
      },
      "metadata": Object {
        "document_pid": "docid-1",
        "end_date": "2020-02-01T10:05:00.000Z",
        "extension_count": 0,
        "item_pid": Object {},
        "patron": Object {
          "email": "patron1@test.ch",
        },
        "patron_pid": "1",
        "pickup_location_pid": "1",
        "pid": "loanid-1",
        "request_expire_date": "2019-06-28",
        "request_start_date": "2018-06-28",
        "start_date": "2018-06-28",
        "state": "PENDING",
        "transaction_date": "2018-06-29",
        "transaction_location_pid": "1",
      },
    }
  }
  onExtendSuccess={[Function]}
  user={
    Object {
      "id": "1",
    }
  }
>
  <Button
    as="button"
    color="purple"
    content="Request extension"
    disabled={true}
    onClick={[Function]}
    size="mini"
  >
    <Ref
      innerRef={
        Object {
          "current": <button
            class="ui purple mini disabled button"
            disabled=""
            tabindex="-1"
          >
            Request extension
          </button>,
        }
      }
    >
      <RefFindNode
        innerRef={
          Object {
            "current": <button
              class="ui purple mini disabled button"
              disabled=""
              tabindex="-1"
            >
              Request extension
            </button>,
          }
        }
      >
        <button
          className="ui purple mini disabled button"
          disabled={true}
          onClick={[Function]}
          tabIndex={-1}
        >
          Request extension
        </button>
      </RefFindNode>
    </Ref>
  </Button>
  <Popup
    content="It is too early for extending the loan. You can request an extension from
      January 25"
    disabled={false}
    eventsEnabled={true}
    offset={0}
    on={
      Array [
        "click",
        "hover",
      ]
    }
    pinned={false}
    position="top right"
    trigger={
      <Icon
        as="i"
        name="info"
      />
    }
  >
    <Portal
      closeOnDocumentClick={true}
      closeOnEscape={true}
      closeOnTriggerClick={true}
      closeOnTriggerMouseLeave={true}
      eventPool="default"
      mouseEnterDelay={50}
      mouseLeaveDelay={70}
      onClose={[Function]}
      onMount={[Function]}
      onOpen={[Function]}
      onUnmount={[Function]}
      openOnTriggerClick={true}
      openOnTriggerMouseEnter={true}
      trigger={
        <Icon
          as="i"
          name="info"
        />
      }
      triggerRef={
        Object {
          "current": <i
            aria-hidden="true"
            class="info icon"
          />,
        }
      }
    >
      <Ref
        innerRef={[Function]}
      >
        <RefFindNode
          innerRef={[Function]}
        >
          <Icon
            as="i"
            name="info"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            <i
              aria-hidden="true"
              className="info icon"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
            />
          </Icon>
        </RefFindNode>
      </Ref>
    </Portal>
  </Popup>
</ExtendButton>
`;
