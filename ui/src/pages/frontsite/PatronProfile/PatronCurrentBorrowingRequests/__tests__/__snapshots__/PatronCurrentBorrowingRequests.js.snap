// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PatronBorrowingRequests tests should load the details component 1`] = `
<Container
  className="spaced"
>
  <Header
    as="h2"
    className="highlight"
    content="Your ILL borrowing requests"
    textAlign="center"
  />
  <Loader
    renderElement={[Function]}
  >
    <Error>
      <NoResultsMessage
        messageContent="Currently you do not have any ILL borrowing requests"
        messageHeader="No ILL borrowing requests"
      />
      <PatronCancelModal
        headerContent="Are you sure you want to cancel your borrowing request?"
        headerIcon="exclamation"
        onCancelAction={[Function]}
        onCloseModal={[Function]}
        open={false}
      />
    </Error>
  </Loader>
</Container>
`;

exports[`PatronBorrowingRequests tests should render patron loans 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <PatronCurrentBorrowingRequests
      data={
        Object {
          "hits": Array [
            Object {
              "id": 1,
              "metadata": Object {
                "document": Object {
                  "title": "Test",
                },
                "document_pid": "5",
                "library_pid": "illlid-1",
                "patron_pid": "1",
                "pid": "illbid-1",
                "request_expire_date": null,
                "request_start_date": null,
                "status": "PENDING",
                "type": "PHYSICAL",
              },
              "pid": "borrowing_request1",
            },
            Object {
              "id": 2,
              "metadata": Object {
                "document": Object {
                  "title": "Test 2",
                },
                "document_pid": "6",
                "library_pid": "illlid-1",
                "patron_pid": "1",
                "pid": "illbid-2",
                "request_expire_date": null,
                "request_start_date": null,
                "status": "REQUESTED",
                "type": "ELECTRONIC",
              },
              "pid": "borrowing_request2",
            },
          ],
          "total": 2,
        }
      }
      fetchPatronCurrentBorrowingRequests={
        [MockFunction] {
          "calls": Array [
            Array [
              "2",
              1,
              5,
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      loanState=""
      patronPid="2"
    >
      <Container
        className="spaced"
      >
        <div
          className="ui container spaced"
        >
          <Header
            as="h2"
            className="highlight"
            content="Your ILL borrowing requests"
            textAlign="center"
          >
            <h2
              className="ui center aligned header highlight"
            >
              Your ILL borrowing requests
            </h2>
          </Header>
          <Loader
            renderElement={[Function]}
          >
            <Error>
              <ItemGroup
                divided={true}
              >
                <div
                  className="ui divided items"
                >
                  <BorrowingRequestListEntry
                    key="illbid-1"
                    loan={
                      Object {
                        "id": 1,
                        "metadata": Object {
                          "document": Object {
                            "title": "Test",
                          },
                          "document_pid": "5",
                          "library_pid": "illlid-1",
                          "patron_pid": "1",
                          "pid": "illbid-1",
                          "request_expire_date": null,
                          "request_start_date": null,
                          "status": "PENDING",
                          "type": "PHYSICAL",
                        },
                        "pid": "borrowing_request1",
                      }
                    }
                    onCancelButton={[Function]}
                  >
                    <Item
                      data-test="illbid-1"
                      key="illbid-1"
                    >
                      <div
                        className="item"
                        data-test="illbid-1"
                      >
                        <DocumentItemCover
                          coverUrl="42"
                          disabled={true}
                          linkTo="/literature/5"
                          metadata={
                            Object {
                              "title": "Test",
                            }
                          }
                          size="mini"
                        >
                          <ItemImage
                            as={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "displayName": "Link",
                                "propTypes": Object {
                                  "innerRef": [Function],
                                  "onClick": [Function],
                                  "replace": [Function],
                                  "target": [Function],
                                  "to": [Function],
                                },
                                "render": [Function],
                              }
                            }
                            disabled={true}
                            label={null}
                            onError={[Function]}
                            size="mini"
                            src="https://assets.thalia.media/img/46276889-00-00.jpg"
                            to="/literature/5"
                          >
                            <Image
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "displayName": "Link",
                                  "propTypes": Object {
                                    "innerRef": [Function],
                                    "onClick": [Function],
                                    "replace": [Function],
                                    "target": [Function],
                                    "to": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              disabled={true}
                              label={null}
                              onError={[Function]}
                              size="mini"
                              src="https://assets.thalia.media/img/46276889-00-00.jpg"
                              to="/literature/5"
                              ui={true}
                              wrapped={true}
                            >
                              <Link
                                className="ui mini disabled image"
                                onError={[Function]}
                                to="/literature/5"
                              >
                                <LinkAnchor
                                  className="ui mini disabled image"
                                  href="/literature/5"
                                  navigate={[Function]}
                                  onError={[Function]}
                                >
                                  <a
                                    className="ui mini disabled image"
                                    href="/literature/5"
                                    onClick={[Function]}
                                    onError={[Function]}
                                  >
                                    <img
                                      src="https://assets.thalia.media/img/46276889-00-00.jpg"
                                    />
                                  </a>
                                </LinkAnchor>
                              </Link>
                            </Image>
                          </ItemImage>
                        </DocumentItemCover>
                        <ItemContent>
                          <div
                            className="content"
                          >
                            <ItemHeader
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "displayName": "Link",
                                  "propTypes": Object {
                                    "innerRef": [Function],
                                    "onClick": [Function],
                                    "replace": [Function],
                                    "target": [Function],
                                    "to": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              to="/literature/5"
                            >
                              <Link
                                className="header"
                                to="/literature/5"
                              >
                                <LinkAnchor
                                  className="header"
                                  href="/literature/5"
                                  navigate={[Function]}
                                >
                                  <a
                                    className="header"
                                    href="/literature/5"
                                    onClick={[Function]}
                                  >
                                    Test
                                  </a>
                                </LinkAnchor>
                              </Link>
                            </ItemHeader>
                            <Grid
                              columns={2}
                            >
                              <div
                                className="ui two column grid"
                              >
                                <GridColumn
                                  computer={8}
                                  mobile={16}
                                  tablet={8}
                                >
                                  <div
                                    className="eight wide computer sixteen wide mobile eight wide tablet column"
                                  >
                                    <ItemMeta>
                                      <div
                                        className="meta"
                                      >
                                        Created on 
                                        <br />
                                        PENDING
                                      </div>
                                    </ItemMeta>
                                  </div>
                                </GridColumn>
                                <GridColumn
                                  computer={8}
                                  mobile={16}
                                  tablet={8}
                                  textAlign="right"
                                >
                                  <div
                                    className="right aligned eight wide computer sixteen wide mobile eight wide tablet column"
                                  >
                                    <ItemDescription>
                                      <div
                                        className="description"
                                      >
                                        <Message
                                          compact={true}
                                          size="small"
                                        >
                                          <div
                                            className="ui small compact message"
                                          >
                                            To 
                                            <b>
                                              cancel
                                            </b>
                                             this request, please contact the library.
                                          </div>
                                        </Message>
                                      </div>
                                    </ItemDescription>
                                  </div>
                                </GridColumn>
                              </div>
                            </Grid>
                          </div>
                        </ItemContent>
                      </div>
                    </Item>
                  </BorrowingRequestListEntry>
                  <BorrowingRequestListEntry
                    key="illbid-2"
                    loan={
                      Object {
                        "id": 2,
                        "metadata": Object {
                          "document": Object {
                            "title": "Test 2",
                          },
                          "document_pid": "6",
                          "library_pid": "illlid-1",
                          "patron_pid": "1",
                          "pid": "illbid-2",
                          "request_expire_date": null,
                          "request_start_date": null,
                          "status": "REQUESTED",
                          "type": "ELECTRONIC",
                        },
                        "pid": "borrowing_request2",
                      }
                    }
                    onCancelButton={[Function]}
                  >
                    <Item
                      data-test="illbid-2"
                      key="illbid-2"
                    >
                      <div
                        className="item"
                        data-test="illbid-2"
                      >
                        <DocumentItemCover
                          coverUrl="42"
                          disabled={true}
                          linkTo="/literature/6"
                          metadata={
                            Object {
                              "title": "Test 2",
                            }
                          }
                          size="mini"
                        >
                          <ItemImage
                            as={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "displayName": "Link",
                                "propTypes": Object {
                                  "innerRef": [Function],
                                  "onClick": [Function],
                                  "replace": [Function],
                                  "target": [Function],
                                  "to": [Function],
                                },
                                "render": [Function],
                              }
                            }
                            disabled={true}
                            label={null}
                            onError={[Function]}
                            size="mini"
                            src="https://assets.thalia.media/img/46276889-00-00.jpg"
                            to="/literature/6"
                          >
                            <Image
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "displayName": "Link",
                                  "propTypes": Object {
                                    "innerRef": [Function],
                                    "onClick": [Function],
                                    "replace": [Function],
                                    "target": [Function],
                                    "to": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              disabled={true}
                              label={null}
                              onError={[Function]}
                              size="mini"
                              src="https://assets.thalia.media/img/46276889-00-00.jpg"
                              to="/literature/6"
                              ui={true}
                              wrapped={true}
                            >
                              <Link
                                className="ui mini disabled image"
                                onError={[Function]}
                                to="/literature/6"
                              >
                                <LinkAnchor
                                  className="ui mini disabled image"
                                  href="/literature/6"
                                  navigate={[Function]}
                                  onError={[Function]}
                                >
                                  <a
                                    className="ui mini disabled image"
                                    href="/literature/6"
                                    onClick={[Function]}
                                    onError={[Function]}
                                  >
                                    <img
                                      src="https://assets.thalia.media/img/46276889-00-00.jpg"
                                    />
                                  </a>
                                </LinkAnchor>
                              </Link>
                            </Image>
                          </ItemImage>
                        </DocumentItemCover>
                        <ItemContent>
                          <div
                            className="content"
                          >
                            <ItemHeader
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "displayName": "Link",
                                  "propTypes": Object {
                                    "innerRef": [Function],
                                    "onClick": [Function],
                                    "replace": [Function],
                                    "target": [Function],
                                    "to": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              to="/literature/6"
                            >
                              <Link
                                className="header"
                                to="/literature/6"
                              >
                                <LinkAnchor
                                  className="header"
                                  href="/literature/6"
                                  navigate={[Function]}
                                >
                                  <a
                                    className="header"
                                    href="/literature/6"
                                    onClick={[Function]}
                                  >
                                    Test 2
                                  </a>
                                </LinkAnchor>
                              </Link>
                            </ItemHeader>
                            <Grid
                              columns={2}
                            >
                              <div
                                className="ui two column grid"
                              >
                                <GridColumn
                                  computer={8}
                                  mobile={16}
                                  tablet={8}
                                >
                                  <div
                                    className="eight wide computer sixteen wide mobile eight wide tablet column"
                                  >
                                    <ItemMeta>
                                      <div
                                        className="meta"
                                      >
                                        Created on 
                                        <br />
                                        REQUESTED
                                      </div>
                                    </ItemMeta>
                                  </div>
                                </GridColumn>
                                <GridColumn
                                  computer={8}
                                  mobile={16}
                                  tablet={8}
                                  textAlign="right"
                                >
                                  <div
                                    className="right aligned eight wide computer sixteen wide mobile eight wide tablet column"
                                  >
                                    <ItemDescription>
                                      <div
                                        className="description"
                                      >
                                        <Message
                                          compact={true}
                                          size="small"
                                        >
                                          <div
                                            className="ui small compact message"
                                          >
                                            To 
                                            <b>
                                              cancel
                                            </b>
                                             this request, please contact the library.
                                          </div>
                                        </Message>
                                      </div>
                                    </ItemDescription>
                                  </div>
                                </GridColumn>
                              </div>
                            </Grid>
                          </div>
                        </ItemContent>
                      </div>
                    </Item>
                  </BorrowingRequestListEntry>
                </div>
              </ItemGroup>
              <Container
                textAlign="center"
              >
                <div
                  className="ui center aligned container"
                >
                  <Pagination
                    currentPage={1}
                    currentSize={5}
                    onPageChange={[Function]}
                    renderElement={null}
                    totalResults={2}
                  >
                    <div
                      id="pagination"
                    >
                      <Pagination
                        activePage={1}
                        aria-label="Pagination Navigation"
                        boundaryRange={1}
                        ellipsisItem="..."
                        firstItem={false}
                        lastItem={false}
                        nextItem={
                          Object {
                            "aria-label": "Next item",
                            "content": "⟩",
                          }
                        }
                        onPageChange={[Function]}
                        pageItem={Object {}}
                        prevItem={
                          Object {
                            "aria-label": "Previous item",
                            "content": "⟨",
                          }
                        }
                        siblingRange={1}
                        totalPages={1}
                      >
                        <Menu
                          aria-label="Pagination Navigation"
                          pagination={true}
                          role="navigation"
                        >
                          <div
                            aria-label="Pagination Navigation"
                            className="ui pagination menu"
                            role="navigation"
                          >
                            <PaginationItem
                              active={false}
                              aria-label="Previous item"
                              content="⟨"
                              key="prevItem-1"
                              onClick={[Function]}
                              type="prevItem"
                              value={1}
                            >
                              <MenuItem
                                active={false}
                                aria-current={false}
                                aria-disabled={false}
                                aria-label="Previous item"
                                content="⟨"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                tabIndex={0}
                                type="prevItem"
                                value={1}
                              >
                                <a
                                  aria-current={false}
                                  aria-disabled={false}
                                  aria-label="Previous item"
                                  className="item"
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  tabIndex={0}
                                  type="prevItem"
                                  value={1}
                                >
                                  ⟨
                                </a>
                              </MenuItem>
                            </PaginationItem>
                            <PaginationItem
                              active={true}
                              content={1}
                              key="pageItem-1"
                              onClick={[Function]}
                              type="pageItem"
                              value={1}
                            >
                              <MenuItem
                                active={true}
                                aria-current={true}
                                aria-disabled={false}
                                content={1}
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                tabIndex={0}
                                type="pageItem"
                                value={1}
                              >
                                <a
                                  aria-current={true}
                                  aria-disabled={false}
                                  className="active item"
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  tabIndex={0}
                                  type="pageItem"
                                  value={1}
                                >
                                  1
                                </a>
                              </MenuItem>
                            </PaginationItem>
                            <PaginationItem
                              active={false}
                              aria-label="Next item"
                              content="⟩"
                              key="nextItem-1"
                              onClick={[Function]}
                              type="nextItem"
                              value={1}
                            >
                              <MenuItem
                                active={false}
                                aria-current={false}
                                aria-disabled={false}
                                aria-label="Next item"
                                content="⟩"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                tabIndex={0}
                                type="nextItem"
                                value={1}
                              >
                                <a
                                  aria-current={false}
                                  aria-disabled={false}
                                  aria-label="Next item"
                                  className="item"
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  tabIndex={0}
                                  type="nextItem"
                                  value={1}
                                >
                                  ⟩
                                </a>
                              </MenuItem>
                            </PaginationItem>
                          </div>
                        </Menu>
                      </Pagination>
                    </div>
                  </Pagination>
                </div>
              </Container>
              <PatronCancelModal
                headerContent="Are you sure you want to cancel your borrowing request?"
                headerIcon="exclamation"
                onCancelAction={[Function]}
                onCloseModal={[Function]}
                open={false}
              >
                <Modal
                  centered={true}
                  closeIcon={true}
                  closeOnDimmerClick={true}
                  closeOnDocumentClick={false}
                  dimmer={true}
                  eventPool="Modal"
                  onClose={[Function]}
                  open={false}
                  size="small"
                >
                  <Portal
                    closeOnDocumentClick={false}
                    closeOnEscape={true}
                    eventPool="Modal"
                    mountNode={<body />}
                    onClose={[Function]}
                    onMount={[Function]}
                    onOpen={[Function]}
                    onUnmount={[Function]}
                    open={false}
                    openOnTriggerClick={true}
                  />
                </Modal>
              </PatronCancelModal>
            </Error>
          </Loader>
        </div>
      </Container>
    </PatronCurrentBorrowingRequests>
  </Router>
</BrowserRouter>
`;

exports[`PatronBorrowingRequests tests should render show a message with no user loans 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <PatronCurrentBorrowingRequests
      data={
        Object {
          "hits": Array [],
          "total": 0,
        }
      }
      fetchPatronCurrentBorrowingRequests={
        [MockFunction] {
          "calls": Array [
            Array [
              "2",
              1,
              5,
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      loanState=""
      patronPid="2"
    >
      <Container
        className="spaced"
      >
        <div
          className="ui container spaced"
        >
          <Header
            as="h2"
            className="highlight"
            content="Your ILL borrowing requests"
            textAlign="center"
          >
            <h2
              className="ui center aligned header highlight"
            >
              Your ILL borrowing requests
            </h2>
          </Header>
          <Loader
            renderElement={[Function]}
          >
            <Error>
              <NoResultsMessage
                messageContent="Currently you do not have any ILL borrowing requests"
                messageHeader="No ILL borrowing requests"
              >
                <Message
                  data-test="no-results"
                  icon={true}
                  info={true}
                >
                  <div
                    className="ui icon info message"
                    data-test="no-results"
                  >
                    <Icon
                      as="i"
                      name="info circle"
                    >
                      <i
                        aria-hidden="true"
                        className="info circle icon"
                        onClick={[Function]}
                      />
                    </Icon>
                    <MessageContent>
                      <div
                        className="content"
                      >
                        <MessageHeader>
                          <div
                            className="header"
                          >
                            No ILL borrowing requests
                          </div>
                        </MessageHeader>
                        <p>
                          Currently you do not have any ILL borrowing requests
                        </p>
                      </div>
                    </MessageContent>
                  </div>
                </Message>
              </NoResultsMessage>
              <PatronCancelModal
                headerContent="Are you sure you want to cancel your borrowing request?"
                headerIcon="exclamation"
                onCancelAction={[Function]}
                onCloseModal={[Function]}
                open={false}
              >
                <Modal
                  centered={true}
                  closeIcon={true}
                  closeOnDimmerClick={true}
                  closeOnDocumentClick={false}
                  dimmer={true}
                  eventPool="Modal"
                  onClose={[Function]}
                  open={false}
                  size="small"
                >
                  <Portal
                    closeOnDocumentClick={false}
                    closeOnEscape={true}
                    eventPool="Modal"
                    mountNode={<body />}
                    onClose={[Function]}
                    onMount={[Function]}
                    onOpen={[Function]}
                    onUnmount={[Function]}
                    open={false}
                    openOnTriggerClick={true}
                  />
                </Modal>
              </PatronCancelModal>
            </Error>
          </Loader>
        </div>
      </Container>
    </PatronCurrentBorrowingRequests>
  </Router>
</BrowserRouter>
`;
