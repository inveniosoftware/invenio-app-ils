// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ResultsTable tests should load the ResultTable component 1`] = `
<Fragment>
  <Message
    data-test="no-results"
    icon={true}
    info={true}
  >
    <MessageContent>
      <MessageHeader>
        No results found
      </MessageHeader>
      There are no 
      .
    </MessageContent>
  </Message>
</Fragment>
`;

exports[`ResultsTable tests should not render the see all button when showing only a few rows 1`] = `
<ResultsTable
  columns={
    Array [
      Object {
        "field": "",
        "formatter": [Function],
        "title": "view",
      },
      Object {
        "field": "id",
        "title": "ID",
      },
    ]
  }
  currentPage={1}
  data={
    Array [
      Object {
        "end_date": "2018-01-01",
        "id": "1",
        "patron_pid": "patron_1",
        "pid": "loan1",
        "start_date": "2018-01-01",
        "updated": "2018-01-01",
      },
      Object {
        "end_date": "2018-01-01",
        "id": "2",
        "patron_pid": "patron_2",
        "pid": "loan2",
        "start_date": "2018-01-01",
        "updated": "2018-01-01",
      },
    ]
  }
  headerActionComponent={null}
  paginationComponent={null}
  seeAllComponent={null}
  showAllResults={false}
  showMaxRows={3}
  singleLine={false}
  subtitle=""
  title=""
>
  <Table
    as="table"
    compact={true}
    selectable={true}
    striped={true}
    subtitle=""
    title=""
    unstackable={true}
  >
    <table
      className="ui selectable striped unstackable compact table"
      subtitle=""
      title=""
    >
      <ResultsTableHeader
        columns={
          Array [
            Object {
              "field": "",
              "formatter": [Function],
              "title": "view",
            },
            Object {
              "field": "id",
              "title": "ID",
            },
          ]
        }
      >
        <TableHeader
          as="thead"
        >
          <thead
            className=""
          >
            <TableRow
              as="tr"
              cellAs="td"
              data-test="header"
            >
              <tr
                className=""
                data-test="header"
              >
                <TableHeaderCell
                  as="th"
                  key="view"
                >
                  <TableCell
                    as="th"
                    className=""
                  >
                    <th
                      className=""
                    >
                      view
                    </th>
                  </TableCell>
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                  key="ID"
                >
                  <TableCell
                    as="th"
                    className=""
                  >
                    <th
                      className=""
                    >
                      ID
                    </th>
                  </TableCell>
                </TableHeaderCell>
              </tr>
            </TableRow>
          </thead>
        </TableHeader>
      </ResultsTableHeader>
      <ResultsTableBody
        columns={
          Array [
            Object {
              "field": "",
              "formatter": [Function],
              "title": "view",
            },
            Object {
              "field": "id",
              "title": "ID",
            },
          ]
        }
        rows={
          Array [
            Object {
              "end_date": "2018-01-01",
              "id": "1",
              "patron_pid": "patron_1",
              "pid": "loan1",
              "start_date": "2018-01-01",
              "updated": "2018-01-01",
            },
            Object {
              "end_date": "2018-01-01",
              "id": "2",
              "patron_pid": "patron_2",
              "pid": "loan2",
              "start_date": "2018-01-01",
              "updated": "2018-01-01",
            },
          ]
        }
      >
        <TableBody
          as="tbody"
        >
          <tbody
            className=""
          >
            <TableRow
              as="tr"
              cellAs="td"
              data-test="loan1"
              key="loan1"
            >
              <tr
                className=""
                data-test="loan1"
              >
                <TableCell
                  as="td"
                  data-label="view"
                  data-test="0-loan1"
                  key="0-loan1"
                >
                  <td
                    className=""
                    data-label="view"
                    data-test="0-loan1"
                  >
                    <Button
                      as="button"
                      onClick={[MockFunction]}
                    >
                      <Ref
                        innerRef={
                          Object {
                            "current": <button
                              class="ui button"
                            >
                              View
                            </button>,
                          }
                        }
                      >
                        <RefFindNode
                          innerRef={
                            Object {
                              "current": <button
                                class="ui button"
                              >
                                View
                              </button>,
                            }
                          }
                        >
                          <button
                            className="ui button"
                            onClick={[Function]}
                          >
                            View
                          </button>
                        </RefFindNode>
                      </Ref>
                    </Button>
                  </td>
                </TableCell>
                <TableCell
                  as="td"
                  data-label="ID"
                  data-test="1-loan1"
                  key="1-loan1"
                >
                  <td
                    className=""
                    data-label="ID"
                    data-test="1-loan1"
                  >
                    1
                  </td>
                </TableCell>
              </tr>
            </TableRow>
            <TableRow
              as="tr"
              cellAs="td"
              data-test="loan2"
              key="loan2"
            >
              <tr
                className=""
                data-test="loan2"
              >
                <TableCell
                  as="td"
                  data-label="view"
                  data-test="0-loan2"
                  key="0-loan2"
                >
                  <td
                    className=""
                    data-label="view"
                    data-test="0-loan2"
                  >
                    <Button
                      as="button"
                      onClick={[MockFunction]}
                    >
                      <Ref
                        innerRef={
                          Object {
                            "current": <button
                              class="ui button"
                            >
                              View
                            </button>,
                          }
                        }
                      >
                        <RefFindNode
                          innerRef={
                            Object {
                              "current": <button
                                class="ui button"
                              >
                                View
                              </button>,
                            }
                          }
                        >
                          <button
                            className="ui button"
                            onClick={[Function]}
                          >
                            View
                          </button>
                        </RefFindNode>
                      </Ref>
                    </Button>
                  </td>
                </TableCell>
                <TableCell
                  as="td"
                  data-label="ID"
                  data-test="1-loan2"
                  key="1-loan2"
                >
                  <td
                    className=""
                    data-label="ID"
                    data-test="1-loan2"
                  >
                    2
                  </td>
                </TableCell>
              </tr>
            </TableRow>
          </tbody>
        </TableBody>
      </ResultsTableBody>
      <ResultsTableFooter
        allRowsNumber={2}
        columnsNumber={2}
        currentPage={1}
        paginationComponent={null}
        seeAllComponent={null}
        showAllResults={false}
        showMaxRows={3}
      />
    </table>
  </Table>
</ResultsTable>
`;

exports[`ResultsTable tests should render the see all button when showing only a few rows 1`] = `
<ResultsTable
  columns={
    Array [
      Object {
        "field": "",
        "formatter": [Function],
        "title": "view",
      },
      Object {
        "field": "id",
        "title": "ID",
      },
    ]
  }
  currentPage={1}
  data={
    Array [
      Object {
        "end_date": "2018-01-01",
        "id": "1",
        "patron_pid": "patron_1",
        "pid": "loan1",
        "start_date": "2018-01-01",
        "updated": "2018-01-01",
      },
      Object {
        "end_date": "2018-01-01",
        "id": "2",
        "patron_pid": "patron_2",
        "pid": "loan2",
        "start_date": "2018-01-01",
        "updated": "2018-01-01",
      },
    ]
  }
  headerActionComponent={null}
  paginationComponent={null}
  seeAllComponent={
    <Button
      as="button"
      onClick={[Function]}
      size="small"
    >
      See all
    </Button>
  }
  showAllResults={false}
  showMaxRows={1}
  singleLine={false}
  subtitle=""
  title=""
>
  <Table
    as="table"
    compact={true}
    selectable={true}
    striped={true}
    subtitle=""
    title=""
    unstackable={true}
  >
    <table
      className="ui selectable striped unstackable compact table"
      subtitle=""
      title=""
    >
      <ResultsTableHeader
        columns={
          Array [
            Object {
              "field": "",
              "formatter": [Function],
              "title": "view",
            },
            Object {
              "field": "id",
              "title": "ID",
            },
          ]
        }
      >
        <TableHeader
          as="thead"
        >
          <thead
            className=""
          >
            <TableRow
              as="tr"
              cellAs="td"
              data-test="header"
            >
              <tr
                className=""
                data-test="header"
              >
                <TableHeaderCell
                  as="th"
                  key="view"
                >
                  <TableCell
                    as="th"
                    className=""
                  >
                    <th
                      className=""
                    >
                      view
                    </th>
                  </TableCell>
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                  key="ID"
                >
                  <TableCell
                    as="th"
                    className=""
                  >
                    <th
                      className=""
                    >
                      ID
                    </th>
                  </TableCell>
                </TableHeaderCell>
              </tr>
            </TableRow>
          </thead>
        </TableHeader>
      </ResultsTableHeader>
      <ResultsTableBody
        columns={
          Array [
            Object {
              "field": "",
              "formatter": [Function],
              "title": "view",
            },
            Object {
              "field": "id",
              "title": "ID",
            },
          ]
        }
        rows={
          Array [
            Object {
              "end_date": "2018-01-01",
              "id": "1",
              "patron_pid": "patron_1",
              "pid": "loan1",
              "start_date": "2018-01-01",
              "updated": "2018-01-01",
            },
          ]
        }
      >
        <TableBody
          as="tbody"
        >
          <tbody
            className=""
          >
            <TableRow
              as="tr"
              cellAs="td"
              data-test="loan1"
              key="loan1"
            >
              <tr
                className=""
                data-test="loan1"
              >
                <TableCell
                  as="td"
                  data-label="view"
                  data-test="0-loan1"
                  key="0-loan1"
                >
                  <td
                    className=""
                    data-label="view"
                    data-test="0-loan1"
                  >
                    <Button
                      as="button"
                      onClick={[MockFunction]}
                    >
                      <Ref
                        innerRef={
                          Object {
                            "current": <button
                              class="ui button"
                            >
                              View
                            </button>,
                          }
                        }
                      >
                        <RefFindNode
                          innerRef={
                            Object {
                              "current": <button
                                class="ui button"
                              >
                                View
                              </button>,
                            }
                          }
                        >
                          <button
                            className="ui button"
                            onClick={[Function]}
                          >
                            View
                          </button>
                        </RefFindNode>
                      </Ref>
                    </Button>
                  </td>
                </TableCell>
                <TableCell
                  as="td"
                  data-label="ID"
                  data-test="1-loan1"
                  key="1-loan1"
                >
                  <td
                    className=""
                    data-label="ID"
                    data-test="1-loan1"
                  >
                    1
                  </td>
                </TableCell>
              </tr>
            </TableRow>
          </tbody>
        </TableBody>
      </ResultsTableBody>
      <ResultsTableFooter
        allRowsNumber={2}
        columnsNumber={2}
        currentPage={1}
        paginationComponent={null}
        seeAllComponent={
          <Button
            as="button"
            onClick={[Function]}
            size="small"
          >
            See all
          </Button>
        }
        showAllResults={false}
        showMaxRows={1}
      >
        <TableFooter
          as="tfoot"
          data-test="footer"
          fullWidth={true}
        >
          <TableHeader
            as="tfoot"
            data-test="footer"
            fullWidth={true}
          >
            <tfoot
              className="full-width"
              data-test="footer"
            >
              <TableRow
                as="tr"
                cellAs="td"
              >
                <tr
                  className=""
                >
                  <TableHeaderCell
                    as="th"
                    colSpan={3}
                    textAlign="right"
                  >
                    <TableCell
                      as="th"
                      className=""
                      colSpan={3}
                      textAlign="right"
                    >
                      <th
                        className="right aligned"
                        colSpan={3}
                      >
                        <span>
                          Showing entries 
                          1
                          -
                          1
                           of 
                          2
                           
                        </span>
                        <span>
                          <Button
                            as="button"
                            onClick={[Function]}
                            size="small"
                          >
                            <Ref
                              innerRef={
                                Object {
                                  "current": <button
                                    class="ui small button"
                                  >
                                    See all
                                  </button>,
                                }
                              }
                            >
                              <RefFindNode
                                innerRef={
                                  Object {
                                    "current": <button
                                      class="ui small button"
                                    >
                                      See all
                                    </button>,
                                  }
                                }
                              >
                                <button
                                  className="ui small button"
                                  onClick={[Function]}
                                >
                                  See all
                                </button>
                              </RefFindNode>
                            </Ref>
                          </Button>
                        </span>
                        <span />
                      </th>
                    </TableCell>
                  </TableHeaderCell>
                </tr>
              </TableRow>
            </tfoot>
          </TableHeader>
        </TableFooter>
      </ResultsTableFooter>
    </table>
  </Table>
</ResultsTable>
`;
